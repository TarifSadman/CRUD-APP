{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nvar _excluded = [\"id\", \"mode\", \"prefixCls\", \"backfill\", \"fieldNames\", \"inputValue\", \"searchValue\", \"onSearch\", \"autoClearSearchValue\", \"onSelect\", \"onDeselect\", \"dropdownMatchSelectWidth\", \"filterOption\", \"filterSort\", \"optionFilterProp\", \"optionLabelProp\", \"options\", \"children\", \"defaultActiveFirstOption\", \"menuItemSelectedIcon\", \"virtual\", \"direction\", \"listHeight\", \"listItemHeight\", \"value\", \"defaultValue\", \"labelInValue\", \"onChange\"];\n/**\n * To match accessibility requirement, we always provide an input in the component.\n * Other element will not set `tabIndex` to avoid `onBlur` sequence problem.\n * For focused select, we set `aria-live=\"polite\"` to update the accessibility content.\n *\n * ref:\n * - keyboard: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/listbox_role#Keyboard_interactions\n *\n * New api:\n * - listHeight\n * - listItemHeight\n * - component\n *\n * Remove deprecated api:\n * - multiple\n * - tags\n * - combobox\n * - firstActiveValue\n * - dropdownMenuStyle\n * - openClassName (Not list in api)\n *\n * Update:\n * - `backfill` only support `combobox` mode\n * - `combobox` mode not support `labelInValue` since it's meaningless\n * - `getInputElement` only support `combobox` mode\n * - `onChange` return OptionData instead of ReactNode\n * - `filterOption` `onChange` `onSelect` accept OptionData instead of ReactNode\n * - `combobox` mode trigger `onChange` will get `undefined` if no `value` match in Option\n * - `combobox` mode not support `optionLabelProp`\n */\n\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport warning from \"rc-util/es/warning\";\nimport * as React from 'react';\nimport BaseSelect, { isMultiple } from \"./BaseSelect\";\nimport useCache from \"./hooks/useCache\";\nimport useFilterOptions from \"./hooks/useFilterOptions\";\nimport useId from \"./hooks/useId\";\nimport useOptions from \"./hooks/useOptions\";\nimport useRefFunc from \"./hooks/useRefFunc\";\nimport OptGroup from \"./OptGroup\";\nimport Option from \"./Option\";\nimport OptionList from \"./OptionList\";\nimport SelectContext from \"./SelectContext\";\nimport { hasValue, isComboNoValue, toArray } from \"./utils/commonUtil\";\nimport { fillFieldNames, flattenOptions, injectPropsWithOption } from \"./utils/valueUtil\";\nimport warningProps, { warningNullOptions } from \"./utils/warningPropsUtil\";\nvar OMIT_DOM_PROPS = ['inputValue'];\n\nfunction isRawValue(value) {\n  return !value || _typeof(value) !== 'object';\n}\n\nvar Select = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var id = props.id,\n      mode = props.mode,\n      _props$prefixCls = props.prefixCls,\n      prefixCls = _props$prefixCls === void 0 ? 'rc-select' : _props$prefixCls,\n      backfill = props.backfill,\n      fieldNames = props.fieldNames,\n      inputValue = props.inputValue,\n      searchValue = props.searchValue,\n      onSearch = props.onSearch,\n      _props$autoClearSearc = props.autoClearSearchValue,\n      autoClearSearchValue = _props$autoClearSearc === void 0 ? true : _props$autoClearSearc,\n      onSelect = props.onSelect,\n      onDeselect = props.onDeselect,\n      _props$dropdownMatchS = props.dropdownMatchSelectWidth,\n      dropdownMatchSelectWidth = _props$dropdownMatchS === void 0 ? true : _props$dropdownMatchS,\n      filterOption = props.filterOption,\n      filterSort = props.filterSort,\n      optionFilterProp = props.optionFilterProp,\n      optionLabelProp = props.optionLabelProp,\n      options = props.options,\n      children = props.children,\n      defaultActiveFirstOption = props.defaultActiveFirstOption,\n      menuItemSelectedIcon = props.menuItemSelectedIcon,\n      virtual = props.virtual,\n      direction = props.direction,\n      _props$listHeight = props.listHeight,\n      listHeight = _props$listHeight === void 0 ? 200 : _props$listHeight,\n      _props$listItemHeight = props.listItemHeight,\n      listItemHeight = _props$listItemHeight === void 0 ? 20 : _props$listItemHeight,\n      value = props.value,\n      defaultValue = props.defaultValue,\n      labelInValue = props.labelInValue,\n      onChange = props.onChange,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  var mergedId = useId(id);\n  var multiple = isMultiple(mode);\n  var childrenAsData = !!(!options && children);\n  var mergedFilterOption = React.useMemo(function () {\n    if (filterOption === undefined && mode === 'combobox') {\n      return false;\n    }\n\n    return filterOption;\n  }, [filterOption, mode]); // ========================= FieldNames =========================\n\n  var mergedFieldNames = React.useMemo(function () {\n    return fillFieldNames(fieldNames, childrenAsData);\n  },\n  /* eslint-disable react-hooks/exhaustive-deps */\n  [// We stringify fieldNames to avoid unnecessary re-renders.\n  JSON.stringify(fieldNames), childrenAsData]\n  /* eslint-enable react-hooks/exhaustive-deps */\n  ); // =========================== Search ===========================\n\n  var _useMergedState = useMergedState('', {\n    value: searchValue !== undefined ? searchValue : inputValue,\n    postState: function postState(search) {\n      return search || '';\n    }\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      mergedSearchValue = _useMergedState2[0],\n      setSearchValue = _useMergedState2[1]; // =========================== Option ===========================\n\n\n  var parsedOptions = useOptions(options, children, mergedFieldNames, optionFilterProp, optionLabelProp);\n  var valueOptions = parsedOptions.valueOptions,\n      labelOptions = parsedOptions.labelOptions,\n      mergedOptions = parsedOptions.options; // ========================= Wrap Value =========================\n\n  var convert2LabelValues = React.useCallback(function (draftValues) {\n    // Convert to array\n    var valueList = toArray(draftValues); // Convert to labelInValue type\n\n    return valueList.map(function (val) {\n      var rawValue;\n      var rawLabel;\n      var rawKey;\n      var rawDisabled;\n      var rawTitle; // Fill label & value\n\n      if (isRawValue(val)) {\n        rawValue = val;\n      } else {\n        var _val$value;\n\n        rawKey = val.key;\n        rawLabel = val.label;\n        rawValue = (_val$value = val.value) !== null && _val$value !== void 0 ? _val$value : rawKey;\n      }\n\n      var option = valueOptions.get(rawValue);\n\n      if (option) {\n        var _option$key; // Fill missing props\n\n\n        if (rawLabel === undefined) rawLabel = option === null || option === void 0 ? void 0 : option[optionLabelProp || mergedFieldNames.label];\n        if (rawKey === undefined) rawKey = (_option$key = option === null || option === void 0 ? void 0 : option.key) !== null && _option$key !== void 0 ? _option$key : rawValue;\n        rawDisabled = option === null || option === void 0 ? void 0 : option.disabled;\n        rawTitle = option === null || option === void 0 ? void 0 : option.title; // Warning if label not same as provided\n\n        if (process.env.NODE_ENV !== 'production' && !optionLabelProp) {\n          var optionLabel = option === null || option === void 0 ? void 0 : option[mergedFieldNames.label];\n\n          if (optionLabel !== undefined && ! /*#__PURE__*/React.isValidElement(optionLabel) && ! /*#__PURE__*/React.isValidElement(rawLabel) && optionLabel !== rawLabel) {\n            warning(false, '`label` of `value` is not same as `label` in Select options.');\n          }\n        }\n      }\n\n      return {\n        label: rawLabel,\n        value: rawValue,\n        key: rawKey,\n        disabled: rawDisabled,\n        title: rawTitle\n      };\n    });\n  }, [mergedFieldNames, optionLabelProp, valueOptions]); // =========================== Values ===========================\n\n  var _useMergedState3 = useMergedState(defaultValue, {\n    value: value\n  }),\n      _useMergedState4 = _slicedToArray(_useMergedState3, 2),\n      internalValue = _useMergedState4[0],\n      setInternalValue = _useMergedState4[1]; // Merged value with LabelValueType\n\n\n  var rawLabeledValues = React.useMemo(function () {\n    var _values$;\n\n    var values = convert2LabelValues(internalValue); // combobox no need save value when it's no value (exclude value equal 0)\n\n    if (mode === 'combobox' && isComboNoValue((_values$ = values[0]) === null || _values$ === void 0 ? void 0 : _values$.value)) {\n      return [];\n    }\n\n    return values;\n  }, [internalValue, convert2LabelValues, mode]); // Fill label with cache to avoid option remove\n\n  var _useCache = useCache(rawLabeledValues, valueOptions),\n      _useCache2 = _slicedToArray(_useCache, 2),\n      mergedValues = _useCache2[0],\n      getMixedOption = _useCache2[1];\n\n  var displayValues = React.useMemo(function () {\n    // `null` need show as placeholder instead\n    // https://github.com/ant-design/ant-design/issues/25057\n    if (!mode && mergedValues.length === 1) {\n      var firstValue = mergedValues[0];\n\n      if (firstValue.value === null && (firstValue.label === null || firstValue.label === undefined)) {\n        return [];\n      }\n    }\n\n    return mergedValues.map(function (item) {\n      var _item$label;\n\n      return _objectSpread(_objectSpread({}, item), {}, {\n        label: (_item$label = item.label) !== null && _item$label !== void 0 ? _item$label : item.value\n      });\n    });\n  }, [mode, mergedValues]);\n  /** Convert `displayValues` to raw value type set */\n\n  var rawValues = React.useMemo(function () {\n    return new Set(mergedValues.map(function (val) {\n      return val.value;\n    }));\n  }, [mergedValues]);\n  React.useEffect(function () {\n    if (mode === 'combobox') {\n      var _mergedValues$;\n\n      var strValue = (_mergedValues$ = mergedValues[0]) === null || _mergedValues$ === void 0 ? void 0 : _mergedValues$.value;\n      setSearchValue(hasValue(strValue) ? String(strValue) : '');\n    }\n  }, [mergedValues]); // ======================= Display Option =======================\n  // Create a placeholder item if not exist in `options`\n\n  var createTagOption = useRefFunc(function (val, label) {\n    var _ref;\n\n    var mergedLabel = label !== null && label !== void 0 ? label : val;\n    return _ref = {}, _defineProperty(_ref, mergedFieldNames.value, val), _defineProperty(_ref, mergedFieldNames.label, mergedLabel), _ref;\n  }); // Fill tag as option if mode is `tags`\n\n  var filledTagOptions = React.useMemo(function () {\n    if (mode !== 'tags') {\n      return mergedOptions;\n    } // >>> Tag mode\n\n\n    var cloneOptions = _toConsumableArray(mergedOptions); // Check if value exist in options (include new patch item)\n\n\n    var existOptions = function existOptions(val) {\n      return valueOptions.has(val);\n    }; // Fill current value as option\n\n\n    _toConsumableArray(mergedValues).sort(function (a, b) {\n      return a.value < b.value ? -1 : 1;\n    }).forEach(function (item) {\n      var val = item.value;\n\n      if (!existOptions(val)) {\n        cloneOptions.push(createTagOption(val, item.label));\n      }\n    });\n\n    return cloneOptions;\n  }, [createTagOption, mergedOptions, valueOptions, mergedValues, mode]);\n  var filteredOptions = useFilterOptions(filledTagOptions, mergedFieldNames, mergedSearchValue, mergedFilterOption, optionFilterProp); // Fill options with search value if needed\n\n  var filledSearchOptions = React.useMemo(function () {\n    if (mode !== 'tags' || !mergedSearchValue || filteredOptions.some(function (item) {\n      return item[optionFilterProp || 'value'] === mergedSearchValue;\n    })) {\n      return filteredOptions;\n    } // ignore when search value equal select input value\n\n\n    if (filteredOptions.some(function (item) {\n      return item[mergedFieldNames.value] === mergedSearchValue;\n    })) {\n      return filteredOptions;\n    } // Fill search value as option\n\n\n    return [createTagOption(mergedSearchValue)].concat(_toConsumableArray(filteredOptions));\n  }, [createTagOption, optionFilterProp, mode, filteredOptions, mergedSearchValue, mergedFieldNames]);\n  var orderedFilteredOptions = React.useMemo(function () {\n    if (!filterSort) {\n      return filledSearchOptions;\n    }\n\n    return _toConsumableArray(filledSearchOptions).sort(function (a, b) {\n      return filterSort(a, b);\n    });\n  }, [filledSearchOptions, filterSort]);\n  var displayOptions = React.useMemo(function () {\n    return flattenOptions(orderedFilteredOptions, {\n      fieldNames: mergedFieldNames,\n      childrenAsData: childrenAsData\n    });\n  }, [orderedFilteredOptions, mergedFieldNames, childrenAsData]); // =========================== Change ===========================\n\n  var triggerChange = function triggerChange(values) {\n    var labeledValues = convert2LabelValues(values);\n    setInternalValue(labeledValues);\n\n    if (onChange && ( // Trigger event only when value changed\n    labeledValues.length !== mergedValues.length || labeledValues.some(function (newVal, index) {\n      var _mergedValues$index;\n\n      return ((_mergedValues$index = mergedValues[index]) === null || _mergedValues$index === void 0 ? void 0 : _mergedValues$index.value) !== (newVal === null || newVal === void 0 ? void 0 : newVal.value);\n    }))) {\n      var returnValues = labelInValue ? labeledValues : labeledValues.map(function (v) {\n        return v.value;\n      });\n      var returnOptions = labeledValues.map(function (v) {\n        return injectPropsWithOption(getMixedOption(v.value));\n      });\n      onChange( // Value\n      multiple ? returnValues : returnValues[0], // Option\n      multiple ? returnOptions : returnOptions[0]);\n    }\n  }; // ======================= Accessibility ========================\n\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      activeValue = _React$useState2[0],\n      setActiveValue = _React$useState2[1];\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      accessibilityIndex = _React$useState4[0],\n      setAccessibilityIndex = _React$useState4[1];\n\n  var mergedDefaultActiveFirstOption = defaultActiveFirstOption !== undefined ? defaultActiveFirstOption : mode !== 'combobox';\n  var onActiveValue = React.useCallback(function (active, index) {\n    var _ref2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n        _ref2$source = _ref2.source,\n        source = _ref2$source === void 0 ? 'keyboard' : _ref2$source;\n\n    setAccessibilityIndex(index);\n\n    if (backfill && mode === 'combobox' && active !== null && source === 'keyboard') {\n      setActiveValue(String(active));\n    }\n  }, [backfill, mode]); // ========================= OptionList =========================\n\n  var triggerSelect = function triggerSelect(val, selected, type) {\n    var getSelectEnt = function getSelectEnt() {\n      var _option$key2;\n\n      var option = getMixedOption(val);\n      return [labelInValue ? {\n        label: option === null || option === void 0 ? void 0 : option[mergedFieldNames.label],\n        value: val,\n        key: (_option$key2 = option === null || option === void 0 ? void 0 : option.key) !== null && _option$key2 !== void 0 ? _option$key2 : val\n      } : val, injectPropsWithOption(option)];\n    };\n\n    if (selected && onSelect) {\n      var _getSelectEnt = getSelectEnt(),\n          _getSelectEnt2 = _slicedToArray(_getSelectEnt, 2),\n          wrappedValue = _getSelectEnt2[0],\n          _option = _getSelectEnt2[1];\n\n      onSelect(wrappedValue, _option);\n    } else if (!selected && onDeselect && type !== 'clear') {\n      var _getSelectEnt3 = getSelectEnt(),\n          _getSelectEnt4 = _slicedToArray(_getSelectEnt3, 2),\n          _wrappedValue = _getSelectEnt4[0],\n          _option2 = _getSelectEnt4[1];\n\n      onDeselect(_wrappedValue, _option2);\n    }\n  }; // Used for OptionList selection\n\n\n  var onInternalSelect = useRefFunc(function (val, info) {\n    var cloneValues; // Single mode always trigger select only with option list\n\n    var mergedSelect = multiple ? info.selected : true;\n\n    if (mergedSelect) {\n      cloneValues = multiple ? [].concat(_toConsumableArray(mergedValues), [val]) : [val];\n    } else {\n      cloneValues = mergedValues.filter(function (v) {\n        return v.value !== val;\n      });\n    }\n\n    triggerChange(cloneValues);\n    triggerSelect(val, mergedSelect); // Clean search value if single or configured\n\n    if (mode === 'combobox') {\n      // setSearchValue(String(val));\n      setActiveValue('');\n    } else if (!isMultiple || autoClearSearchValue) {\n      setSearchValue('');\n      setActiveValue('');\n    }\n  }); // ======================= Display Change =======================\n  // BaseSelect display values change\n\n  var onDisplayValuesChange = function onDisplayValuesChange(nextValues, info) {\n    triggerChange(nextValues);\n    var type = info.type,\n        values = info.values;\n\n    if (type === 'remove' || type === 'clear') {\n      values.forEach(function (item) {\n        triggerSelect(item.value, false, type);\n      });\n    }\n  }; // =========================== Search ===========================\n\n\n  var onInternalSearch = function onInternalSearch(searchText, info) {\n    setSearchValue(searchText);\n    setActiveValue(null); // [Submit] Tag mode should flush input\n\n    if (info.source === 'submit') {\n      var formatted = (searchText || '').trim(); // prevent empty tags from appearing when you click the Enter button\n\n      if (formatted) {\n        var newRawValues = Array.from(new Set([].concat(_toConsumableArray(rawValues), [formatted])));\n        triggerChange(newRawValues);\n        triggerSelect(formatted, true);\n        setSearchValue('');\n      }\n\n      return;\n    }\n\n    if (info.source !== 'blur') {\n      if (mode === 'combobox') {\n        triggerChange(searchText);\n      }\n\n      onSearch === null || onSearch === void 0 ? void 0 : onSearch(searchText);\n    }\n  };\n\n  var onInternalSearchSplit = function onInternalSearchSplit(words) {\n    var patchValues = words;\n\n    if (mode !== 'tags') {\n      patchValues = words.map(function (word) {\n        var opt = labelOptions.get(word);\n        return opt === null || opt === void 0 ? void 0 : opt.value;\n      }).filter(function (val) {\n        return val !== undefined;\n      });\n    }\n\n    var newRawValues = Array.from(new Set([].concat(_toConsumableArray(rawValues), _toConsumableArray(patchValues))));\n    triggerChange(newRawValues);\n    newRawValues.forEach(function (newRawValue) {\n      triggerSelect(newRawValue, true);\n    });\n  }; // ========================== Context ===========================\n\n\n  var selectContext = React.useMemo(function () {\n    var realVirtual = virtual !== false && dropdownMatchSelectWidth !== false;\n    return _objectSpread(_objectSpread({}, parsedOptions), {}, {\n      flattenOptions: displayOptions,\n      onActiveValue: onActiveValue,\n      defaultActiveFirstOption: mergedDefaultActiveFirstOption,\n      onSelect: onInternalSelect,\n      menuItemSelectedIcon: menuItemSelectedIcon,\n      rawValues: rawValues,\n      fieldNames: mergedFieldNames,\n      virtual: realVirtual,\n      direction: direction,\n      listHeight: listHeight,\n      listItemHeight: listItemHeight,\n      childrenAsData: childrenAsData\n    });\n  }, [parsedOptions, displayOptions, onActiveValue, mergedDefaultActiveFirstOption, onInternalSelect, menuItemSelectedIcon, rawValues, mergedFieldNames, virtual, dropdownMatchSelectWidth, listHeight, listItemHeight, childrenAsData]); // ========================== Warning ===========================\n\n  if (process.env.NODE_ENV !== 'production') {\n    warningProps(props);\n    warningNullOptions(mergedOptions, mergedFieldNames);\n  } // ==============================================================\n  // ==                          Render                          ==\n  // ==============================================================\n\n\n  return /*#__PURE__*/React.createElement(SelectContext.Provider, {\n    value: selectContext\n  }, /*#__PURE__*/React.createElement(BaseSelect, _extends({}, restProps, {\n    // >>> MISC\n    id: mergedId,\n    prefixCls: prefixCls,\n    ref: ref,\n    omitDomProps: OMIT_DOM_PROPS,\n    mode: mode // >>> Values\n    ,\n    displayValues: displayValues,\n    onDisplayValuesChange: onDisplayValuesChange // >>> Trigger\n    ,\n    direction: direction // >>> Search\n    ,\n    searchValue: mergedSearchValue,\n    onSearch: onInternalSearch,\n    autoClearSearchValue: autoClearSearchValue,\n    onSearchSplit: onInternalSearchSplit,\n    dropdownMatchSelectWidth: dropdownMatchSelectWidth // >>> OptionList\n    ,\n    OptionList: OptionList,\n    emptyOptions: !displayOptions.length // >>> Accessibility\n    ,\n    activeValue: activeValue,\n    activeDescendantId: \"\".concat(mergedId, \"_list_\").concat(accessibilityIndex)\n  })));\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Select.displayName = 'Select';\n}\n\nvar TypedSelect = Select;\nTypedSelect.Option = Option;\nTypedSelect.OptGroup = OptGroup;\nexport default TypedSelect;","map":{"version":3,"names":["_extends","_toConsumableArray","_defineProperty","_objectSpread","_slicedToArray","_objectWithoutProperties","_typeof","_excluded","useMergedState","warning","React","BaseSelect","isMultiple","useCache","useFilterOptions","useId","useOptions","useRefFunc","OptGroup","Option","OptionList","SelectContext","hasValue","isComboNoValue","toArray","fillFieldNames","flattenOptions","injectPropsWithOption","warningProps","warningNullOptions","OMIT_DOM_PROPS","isRawValue","value","Select","forwardRef","props","ref","id","mode","_props$prefixCls","prefixCls","backfill","fieldNames","inputValue","searchValue","onSearch","_props$autoClearSearc","autoClearSearchValue","onSelect","onDeselect","_props$dropdownMatchS","dropdownMatchSelectWidth","filterOption","filterSort","optionFilterProp","optionLabelProp","options","children","defaultActiveFirstOption","menuItemSelectedIcon","virtual","direction","_props$listHeight","listHeight","_props$listItemHeight","listItemHeight","defaultValue","labelInValue","onChange","restProps","mergedId","multiple","childrenAsData","mergedFilterOption","useMemo","undefined","mergedFieldNames","JSON","stringify","_useMergedState","postState","search","_useMergedState2","mergedSearchValue","setSearchValue","parsedOptions","valueOptions","labelOptions","mergedOptions","convert2LabelValues","useCallback","draftValues","valueList","map","val","rawValue","rawLabel","rawKey","rawDisabled","rawTitle","_val$value","key","label","option","get","_option$key","disabled","title","process","env","NODE_ENV","optionLabel","isValidElement","_useMergedState3","_useMergedState4","internalValue","setInternalValue","rawLabeledValues","_values$","values","_useCache","_useCache2","mergedValues","getMixedOption","displayValues","length","firstValue","item","_item$label","rawValues","Set","useEffect","_mergedValues$","strValue","String","createTagOption","_ref","mergedLabel","filledTagOptions","cloneOptions","existOptions","has","sort","a","b","forEach","push","filteredOptions","filledSearchOptions","some","concat","orderedFilteredOptions","displayOptions","triggerChange","labeledValues","newVal","index","_mergedValues$index","returnValues","v","returnOptions","_React$useState","useState","_React$useState2","activeValue","setActiveValue","_React$useState3","_React$useState4","accessibilityIndex","setAccessibilityIndex","mergedDefaultActiveFirstOption","onActiveValue","active","_ref2","arguments","_ref2$source","source","triggerSelect","selected","type","getSelectEnt","_option$key2","_getSelectEnt","_getSelectEnt2","wrappedValue","_option","_getSelectEnt3","_getSelectEnt4","_wrappedValue","_option2","onInternalSelect","info","cloneValues","mergedSelect","filter","onDisplayValuesChange","nextValues","onInternalSearch","searchText","formatted","trim","newRawValues","Array","from","onInternalSearchSplit","words","patchValues","word","opt","newRawValue","selectContext","realVirtual","createElement","Provider","omitDomProps","onSearchSplit","emptyOptions","activeDescendantId","displayName","TypedSelect"],"sources":["/mnt/c/Users/Admin/crud-app/node_modules/rc-select/es/Select.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nvar _excluded = [\"id\", \"mode\", \"prefixCls\", \"backfill\", \"fieldNames\", \"inputValue\", \"searchValue\", \"onSearch\", \"autoClearSearchValue\", \"onSelect\", \"onDeselect\", \"dropdownMatchSelectWidth\", \"filterOption\", \"filterSort\", \"optionFilterProp\", \"optionLabelProp\", \"options\", \"children\", \"defaultActiveFirstOption\", \"menuItemSelectedIcon\", \"virtual\", \"direction\", \"listHeight\", \"listItemHeight\", \"value\", \"defaultValue\", \"labelInValue\", \"onChange\"];\n/**\n * To match accessibility requirement, we always provide an input in the component.\n * Other element will not set `tabIndex` to avoid `onBlur` sequence problem.\n * For focused select, we set `aria-live=\"polite\"` to update the accessibility content.\n *\n * ref:\n * - keyboard: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/listbox_role#Keyboard_interactions\n *\n * New api:\n * - listHeight\n * - listItemHeight\n * - component\n *\n * Remove deprecated api:\n * - multiple\n * - tags\n * - combobox\n * - firstActiveValue\n * - dropdownMenuStyle\n * - openClassName (Not list in api)\n *\n * Update:\n * - `backfill` only support `combobox` mode\n * - `combobox` mode not support `labelInValue` since it's meaningless\n * - `getInputElement` only support `combobox` mode\n * - `onChange` return OptionData instead of ReactNode\n * - `filterOption` `onChange` `onSelect` accept OptionData instead of ReactNode\n * - `combobox` mode trigger `onChange` will get `undefined` if no `value` match in Option\n * - `combobox` mode not support `optionLabelProp`\n */\n\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport warning from \"rc-util/es/warning\";\nimport * as React from 'react';\nimport BaseSelect, { isMultiple } from \"./BaseSelect\";\nimport useCache from \"./hooks/useCache\";\nimport useFilterOptions from \"./hooks/useFilterOptions\";\nimport useId from \"./hooks/useId\";\nimport useOptions from \"./hooks/useOptions\";\nimport useRefFunc from \"./hooks/useRefFunc\";\nimport OptGroup from \"./OptGroup\";\nimport Option from \"./Option\";\nimport OptionList from \"./OptionList\";\nimport SelectContext from \"./SelectContext\";\nimport { hasValue, isComboNoValue, toArray } from \"./utils/commonUtil\";\nimport { fillFieldNames, flattenOptions, injectPropsWithOption } from \"./utils/valueUtil\";\nimport warningProps, { warningNullOptions } from \"./utils/warningPropsUtil\";\nvar OMIT_DOM_PROPS = ['inputValue'];\nfunction isRawValue(value) {\n  return !value || _typeof(value) !== 'object';\n}\nvar Select = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var id = props.id,\n    mode = props.mode,\n    _props$prefixCls = props.prefixCls,\n    prefixCls = _props$prefixCls === void 0 ? 'rc-select' : _props$prefixCls,\n    backfill = props.backfill,\n    fieldNames = props.fieldNames,\n    inputValue = props.inputValue,\n    searchValue = props.searchValue,\n    onSearch = props.onSearch,\n    _props$autoClearSearc = props.autoClearSearchValue,\n    autoClearSearchValue = _props$autoClearSearc === void 0 ? true : _props$autoClearSearc,\n    onSelect = props.onSelect,\n    onDeselect = props.onDeselect,\n    _props$dropdownMatchS = props.dropdownMatchSelectWidth,\n    dropdownMatchSelectWidth = _props$dropdownMatchS === void 0 ? true : _props$dropdownMatchS,\n    filterOption = props.filterOption,\n    filterSort = props.filterSort,\n    optionFilterProp = props.optionFilterProp,\n    optionLabelProp = props.optionLabelProp,\n    options = props.options,\n    children = props.children,\n    defaultActiveFirstOption = props.defaultActiveFirstOption,\n    menuItemSelectedIcon = props.menuItemSelectedIcon,\n    virtual = props.virtual,\n    direction = props.direction,\n    _props$listHeight = props.listHeight,\n    listHeight = _props$listHeight === void 0 ? 200 : _props$listHeight,\n    _props$listItemHeight = props.listItemHeight,\n    listItemHeight = _props$listItemHeight === void 0 ? 20 : _props$listItemHeight,\n    value = props.value,\n    defaultValue = props.defaultValue,\n    labelInValue = props.labelInValue,\n    onChange = props.onChange,\n    restProps = _objectWithoutProperties(props, _excluded);\n  var mergedId = useId(id);\n  var multiple = isMultiple(mode);\n  var childrenAsData = !!(!options && children);\n  var mergedFilterOption = React.useMemo(function () {\n    if (filterOption === undefined && mode === 'combobox') {\n      return false;\n    }\n    return filterOption;\n  }, [filterOption, mode]);\n\n  // ========================= FieldNames =========================\n  var mergedFieldNames = React.useMemo(function () {\n    return fillFieldNames(fieldNames, childrenAsData);\n  }, /* eslint-disable react-hooks/exhaustive-deps */\n  [\n  // We stringify fieldNames to avoid unnecessary re-renders.\n  JSON.stringify(fieldNames), childrenAsData]\n  /* eslint-enable react-hooks/exhaustive-deps */);\n\n  // =========================== Search ===========================\n  var _useMergedState = useMergedState('', {\n      value: searchValue !== undefined ? searchValue : inputValue,\n      postState: function postState(search) {\n        return search || '';\n      }\n    }),\n    _useMergedState2 = _slicedToArray(_useMergedState, 2),\n    mergedSearchValue = _useMergedState2[0],\n    setSearchValue = _useMergedState2[1];\n\n  // =========================== Option ===========================\n  var parsedOptions = useOptions(options, children, mergedFieldNames, optionFilterProp, optionLabelProp);\n  var valueOptions = parsedOptions.valueOptions,\n    labelOptions = parsedOptions.labelOptions,\n    mergedOptions = parsedOptions.options;\n\n  // ========================= Wrap Value =========================\n  var convert2LabelValues = React.useCallback(function (draftValues) {\n    // Convert to array\n    var valueList = toArray(draftValues);\n\n    // Convert to labelInValue type\n    return valueList.map(function (val) {\n      var rawValue;\n      var rawLabel;\n      var rawKey;\n      var rawDisabled;\n      var rawTitle;\n\n      // Fill label & value\n      if (isRawValue(val)) {\n        rawValue = val;\n      } else {\n        var _val$value;\n        rawKey = val.key;\n        rawLabel = val.label;\n        rawValue = (_val$value = val.value) !== null && _val$value !== void 0 ? _val$value : rawKey;\n      }\n      var option = valueOptions.get(rawValue);\n      if (option) {\n        var _option$key;\n        // Fill missing props\n        if (rawLabel === undefined) rawLabel = option === null || option === void 0 ? void 0 : option[optionLabelProp || mergedFieldNames.label];\n        if (rawKey === undefined) rawKey = (_option$key = option === null || option === void 0 ? void 0 : option.key) !== null && _option$key !== void 0 ? _option$key : rawValue;\n        rawDisabled = option === null || option === void 0 ? void 0 : option.disabled;\n        rawTitle = option === null || option === void 0 ? void 0 : option.title;\n\n        // Warning if label not same as provided\n        if (process.env.NODE_ENV !== 'production' && !optionLabelProp) {\n          var optionLabel = option === null || option === void 0 ? void 0 : option[mergedFieldNames.label];\n          if (optionLabel !== undefined && ! /*#__PURE__*/React.isValidElement(optionLabel) && ! /*#__PURE__*/React.isValidElement(rawLabel) && optionLabel !== rawLabel) {\n            warning(false, '`label` of `value` is not same as `label` in Select options.');\n          }\n        }\n      }\n      return {\n        label: rawLabel,\n        value: rawValue,\n        key: rawKey,\n        disabled: rawDisabled,\n        title: rawTitle\n      };\n    });\n  }, [mergedFieldNames, optionLabelProp, valueOptions]);\n\n  // =========================== Values ===========================\n  var _useMergedState3 = useMergedState(defaultValue, {\n      value: value\n    }),\n    _useMergedState4 = _slicedToArray(_useMergedState3, 2),\n    internalValue = _useMergedState4[0],\n    setInternalValue = _useMergedState4[1];\n\n  // Merged value with LabelValueType\n  var rawLabeledValues = React.useMemo(function () {\n    var _values$;\n    var values = convert2LabelValues(internalValue);\n\n    // combobox no need save value when it's no value (exclude value equal 0)\n    if (mode === 'combobox' && isComboNoValue((_values$ = values[0]) === null || _values$ === void 0 ? void 0 : _values$.value)) {\n      return [];\n    }\n    return values;\n  }, [internalValue, convert2LabelValues, mode]);\n\n  // Fill label with cache to avoid option remove\n  var _useCache = useCache(rawLabeledValues, valueOptions),\n    _useCache2 = _slicedToArray(_useCache, 2),\n    mergedValues = _useCache2[0],\n    getMixedOption = _useCache2[1];\n  var displayValues = React.useMemo(function () {\n    // `null` need show as placeholder instead\n    // https://github.com/ant-design/ant-design/issues/25057\n    if (!mode && mergedValues.length === 1) {\n      var firstValue = mergedValues[0];\n      if (firstValue.value === null && (firstValue.label === null || firstValue.label === undefined)) {\n        return [];\n      }\n    }\n    return mergedValues.map(function (item) {\n      var _item$label;\n      return _objectSpread(_objectSpread({}, item), {}, {\n        label: (_item$label = item.label) !== null && _item$label !== void 0 ? _item$label : item.value\n      });\n    });\n  }, [mode, mergedValues]);\n\n  /** Convert `displayValues` to raw value type set */\n  var rawValues = React.useMemo(function () {\n    return new Set(mergedValues.map(function (val) {\n      return val.value;\n    }));\n  }, [mergedValues]);\n  React.useEffect(function () {\n    if (mode === 'combobox') {\n      var _mergedValues$;\n      var strValue = (_mergedValues$ = mergedValues[0]) === null || _mergedValues$ === void 0 ? void 0 : _mergedValues$.value;\n      setSearchValue(hasValue(strValue) ? String(strValue) : '');\n    }\n  }, [mergedValues]);\n\n  // ======================= Display Option =======================\n  // Create a placeholder item if not exist in `options`\n  var createTagOption = useRefFunc(function (val, label) {\n    var _ref;\n    var mergedLabel = label !== null && label !== void 0 ? label : val;\n    return _ref = {}, _defineProperty(_ref, mergedFieldNames.value, val), _defineProperty(_ref, mergedFieldNames.label, mergedLabel), _ref;\n  });\n\n  // Fill tag as option if mode is `tags`\n  var filledTagOptions = React.useMemo(function () {\n    if (mode !== 'tags') {\n      return mergedOptions;\n    }\n\n    // >>> Tag mode\n    var cloneOptions = _toConsumableArray(mergedOptions);\n\n    // Check if value exist in options (include new patch item)\n    var existOptions = function existOptions(val) {\n      return valueOptions.has(val);\n    };\n\n    // Fill current value as option\n    _toConsumableArray(mergedValues).sort(function (a, b) {\n      return a.value < b.value ? -1 : 1;\n    }).forEach(function (item) {\n      var val = item.value;\n      if (!existOptions(val)) {\n        cloneOptions.push(createTagOption(val, item.label));\n      }\n    });\n    return cloneOptions;\n  }, [createTagOption, mergedOptions, valueOptions, mergedValues, mode]);\n  var filteredOptions = useFilterOptions(filledTagOptions, mergedFieldNames, mergedSearchValue, mergedFilterOption, optionFilterProp);\n\n  // Fill options with search value if needed\n  var filledSearchOptions = React.useMemo(function () {\n    if (mode !== 'tags' || !mergedSearchValue || filteredOptions.some(function (item) {\n      return item[optionFilterProp || 'value'] === mergedSearchValue;\n    })) {\n      return filteredOptions;\n    }\n    // ignore when search value equal select input value\n    if (filteredOptions.some(function (item) {\n      return item[mergedFieldNames.value] === mergedSearchValue;\n    })) {\n      return filteredOptions;\n    }\n    // Fill search value as option\n    return [createTagOption(mergedSearchValue)].concat(_toConsumableArray(filteredOptions));\n  }, [createTagOption, optionFilterProp, mode, filteredOptions, mergedSearchValue, mergedFieldNames]);\n  var orderedFilteredOptions = React.useMemo(function () {\n    if (!filterSort) {\n      return filledSearchOptions;\n    }\n    return _toConsumableArray(filledSearchOptions).sort(function (a, b) {\n      return filterSort(a, b);\n    });\n  }, [filledSearchOptions, filterSort]);\n  var displayOptions = React.useMemo(function () {\n    return flattenOptions(orderedFilteredOptions, {\n      fieldNames: mergedFieldNames,\n      childrenAsData: childrenAsData\n    });\n  }, [orderedFilteredOptions, mergedFieldNames, childrenAsData]);\n\n  // =========================== Change ===========================\n  var triggerChange = function triggerChange(values) {\n    var labeledValues = convert2LabelValues(values);\n    setInternalValue(labeledValues);\n    if (onChange && (\n    // Trigger event only when value changed\n    labeledValues.length !== mergedValues.length || labeledValues.some(function (newVal, index) {\n      var _mergedValues$index;\n      return ((_mergedValues$index = mergedValues[index]) === null || _mergedValues$index === void 0 ? void 0 : _mergedValues$index.value) !== (newVal === null || newVal === void 0 ? void 0 : newVal.value);\n    }))) {\n      var returnValues = labelInValue ? labeledValues : labeledValues.map(function (v) {\n        return v.value;\n      });\n      var returnOptions = labeledValues.map(function (v) {\n        return injectPropsWithOption(getMixedOption(v.value));\n      });\n      onChange(\n      // Value\n      multiple ? returnValues : returnValues[0],\n      // Option\n      multiple ? returnOptions : returnOptions[0]);\n    }\n  };\n\n  // ======================= Accessibility ========================\n  var _React$useState = React.useState(null),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    activeValue = _React$useState2[0],\n    setActiveValue = _React$useState2[1];\n  var _React$useState3 = React.useState(0),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    accessibilityIndex = _React$useState4[0],\n    setAccessibilityIndex = _React$useState4[1];\n  var mergedDefaultActiveFirstOption = defaultActiveFirstOption !== undefined ? defaultActiveFirstOption : mode !== 'combobox';\n  var onActiveValue = React.useCallback(function (active, index) {\n    var _ref2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      _ref2$source = _ref2.source,\n      source = _ref2$source === void 0 ? 'keyboard' : _ref2$source;\n    setAccessibilityIndex(index);\n    if (backfill && mode === 'combobox' && active !== null && source === 'keyboard') {\n      setActiveValue(String(active));\n    }\n  }, [backfill, mode]);\n\n  // ========================= OptionList =========================\n  var triggerSelect = function triggerSelect(val, selected, type) {\n    var getSelectEnt = function getSelectEnt() {\n      var _option$key2;\n      var option = getMixedOption(val);\n      return [labelInValue ? {\n        label: option === null || option === void 0 ? void 0 : option[mergedFieldNames.label],\n        value: val,\n        key: (_option$key2 = option === null || option === void 0 ? void 0 : option.key) !== null && _option$key2 !== void 0 ? _option$key2 : val\n      } : val, injectPropsWithOption(option)];\n    };\n    if (selected && onSelect) {\n      var _getSelectEnt = getSelectEnt(),\n        _getSelectEnt2 = _slicedToArray(_getSelectEnt, 2),\n        wrappedValue = _getSelectEnt2[0],\n        _option = _getSelectEnt2[1];\n      onSelect(wrappedValue, _option);\n    } else if (!selected && onDeselect && type !== 'clear') {\n      var _getSelectEnt3 = getSelectEnt(),\n        _getSelectEnt4 = _slicedToArray(_getSelectEnt3, 2),\n        _wrappedValue = _getSelectEnt4[0],\n        _option2 = _getSelectEnt4[1];\n      onDeselect(_wrappedValue, _option2);\n    }\n  };\n\n  // Used for OptionList selection\n  var onInternalSelect = useRefFunc(function (val, info) {\n    var cloneValues;\n\n    // Single mode always trigger select only with option list\n    var mergedSelect = multiple ? info.selected : true;\n    if (mergedSelect) {\n      cloneValues = multiple ? [].concat(_toConsumableArray(mergedValues), [val]) : [val];\n    } else {\n      cloneValues = mergedValues.filter(function (v) {\n        return v.value !== val;\n      });\n    }\n    triggerChange(cloneValues);\n    triggerSelect(val, mergedSelect);\n\n    // Clean search value if single or configured\n    if (mode === 'combobox') {\n      // setSearchValue(String(val));\n      setActiveValue('');\n    } else if (!isMultiple || autoClearSearchValue) {\n      setSearchValue('');\n      setActiveValue('');\n    }\n  });\n\n  // ======================= Display Change =======================\n  // BaseSelect display values change\n  var onDisplayValuesChange = function onDisplayValuesChange(nextValues, info) {\n    triggerChange(nextValues);\n    var type = info.type,\n      values = info.values;\n    if (type === 'remove' || type === 'clear') {\n      values.forEach(function (item) {\n        triggerSelect(item.value, false, type);\n      });\n    }\n  };\n\n  // =========================== Search ===========================\n  var onInternalSearch = function onInternalSearch(searchText, info) {\n    setSearchValue(searchText);\n    setActiveValue(null);\n\n    // [Submit] Tag mode should flush input\n    if (info.source === 'submit') {\n      var formatted = (searchText || '').trim();\n      // prevent empty tags from appearing when you click the Enter button\n      if (formatted) {\n        var newRawValues = Array.from(new Set([].concat(_toConsumableArray(rawValues), [formatted])));\n        triggerChange(newRawValues);\n        triggerSelect(formatted, true);\n        setSearchValue('');\n      }\n      return;\n    }\n    if (info.source !== 'blur') {\n      if (mode === 'combobox') {\n        triggerChange(searchText);\n      }\n      onSearch === null || onSearch === void 0 ? void 0 : onSearch(searchText);\n    }\n  };\n  var onInternalSearchSplit = function onInternalSearchSplit(words) {\n    var patchValues = words;\n    if (mode !== 'tags') {\n      patchValues = words.map(function (word) {\n        var opt = labelOptions.get(word);\n        return opt === null || opt === void 0 ? void 0 : opt.value;\n      }).filter(function (val) {\n        return val !== undefined;\n      });\n    }\n    var newRawValues = Array.from(new Set([].concat(_toConsumableArray(rawValues), _toConsumableArray(patchValues))));\n    triggerChange(newRawValues);\n    newRawValues.forEach(function (newRawValue) {\n      triggerSelect(newRawValue, true);\n    });\n  };\n\n  // ========================== Context ===========================\n  var selectContext = React.useMemo(function () {\n    var realVirtual = virtual !== false && dropdownMatchSelectWidth !== false;\n    return _objectSpread(_objectSpread({}, parsedOptions), {}, {\n      flattenOptions: displayOptions,\n      onActiveValue: onActiveValue,\n      defaultActiveFirstOption: mergedDefaultActiveFirstOption,\n      onSelect: onInternalSelect,\n      menuItemSelectedIcon: menuItemSelectedIcon,\n      rawValues: rawValues,\n      fieldNames: mergedFieldNames,\n      virtual: realVirtual,\n      direction: direction,\n      listHeight: listHeight,\n      listItemHeight: listItemHeight,\n      childrenAsData: childrenAsData\n    });\n  }, [parsedOptions, displayOptions, onActiveValue, mergedDefaultActiveFirstOption, onInternalSelect, menuItemSelectedIcon, rawValues, mergedFieldNames, virtual, dropdownMatchSelectWidth, listHeight, listItemHeight, childrenAsData]);\n\n  // ========================== Warning ===========================\n  if (process.env.NODE_ENV !== 'production') {\n    warningProps(props);\n    warningNullOptions(mergedOptions, mergedFieldNames);\n  }\n\n  // ==============================================================\n  // ==                          Render                          ==\n  // ==============================================================\n  return /*#__PURE__*/React.createElement(SelectContext.Provider, {\n    value: selectContext\n  }, /*#__PURE__*/React.createElement(BaseSelect, _extends({}, restProps, {\n    // >>> MISC\n    id: mergedId,\n    prefixCls: prefixCls,\n    ref: ref,\n    omitDomProps: OMIT_DOM_PROPS,\n    mode: mode\n    // >>> Values\n    ,\n    displayValues: displayValues,\n    onDisplayValuesChange: onDisplayValuesChange\n    // >>> Trigger\n    ,\n    direction: direction\n    // >>> Search\n    ,\n    searchValue: mergedSearchValue,\n    onSearch: onInternalSearch,\n    autoClearSearchValue: autoClearSearchValue,\n    onSearchSplit: onInternalSearchSplit,\n    dropdownMatchSelectWidth: dropdownMatchSelectWidth\n    // >>> OptionList\n    ,\n    OptionList: OptionList,\n    emptyOptions: !displayOptions.length\n    // >>> Accessibility\n    ,\n    activeValue: activeValue,\n    activeDescendantId: \"\".concat(mergedId, \"_list_\").concat(accessibilityIndex)\n  })));\n});\nif (process.env.NODE_ENV !== 'production') {\n  Select.displayName = 'Select';\n}\nvar TypedSelect = Select;\nTypedSelect.Option = Option;\nTypedSelect.OptGroup = OptGroup;\nexport default TypedSelect;"],"mappings":"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"},"metadata":{},"sourceType":"module"}