{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { useContext } from '@rc-component/context';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { getCellProps } from \"../Body/BodyRow\";\nimport Cell from \"../Cell\";\nimport { GridContext } from \"./context\";\n/**\n * Return the width of the column by `colSpan`.\n * When `colSpan` is `0` will be trade as `1`.\n */\n\nexport function getColumnWidth(colIndex, colSpan, columnsOffset) {\n  var mergedColSpan = colSpan || 1;\n  return columnsOffset[colIndex + mergedColSpan] - (columnsOffset[colIndex] || 0);\n}\n\nfunction VirtualCell(props) {\n  var rowInfo = props.rowInfo,\n      column = props.column,\n      colIndex = props.colIndex,\n      indent = props.indent,\n      index = props.index,\n      renderIndex = props.renderIndex,\n      record = props.record,\n      style = props.style,\n      className = props.className,\n      inverse = props.inverse,\n      getHeight = props.getHeight;\n  var render = column.render,\n      dataIndex = column.dataIndex,\n      columnClassName = column.className,\n      colWidth = column.width;\n\n  var _useContext = useContext(GridContext, ['columnsOffset']),\n      columnsOffset = _useContext.columnsOffset;\n\n  var _getCellProps = getCellProps(rowInfo, column, colIndex, indent, index),\n      key = _getCellProps.key,\n      fixedInfo = _getCellProps.fixedInfo,\n      appendCellNode = _getCellProps.appendCellNode,\n      additionalCellProps = _getCellProps.additionalCellProps;\n\n  var cellStyle = additionalCellProps.style,\n      _additionalCellProps$ = additionalCellProps.colSpan,\n      colSpan = _additionalCellProps$ === void 0 ? 1 : _additionalCellProps$,\n      _additionalCellProps$2 = additionalCellProps.rowSpan,\n      rowSpan = _additionalCellProps$2 === void 0 ? 1 : _additionalCellProps$2; // ========================= ColWidth =========================\n  // column width\n\n  var startColIndex = colIndex - 1;\n  var concatColWidth = getColumnWidth(startColIndex, colSpan, columnsOffset); // margin offset\n\n  var marginOffset = colSpan > 1 ? colWidth - concatColWidth : 0; // ========================== Style ===========================\n\n  var mergedStyle = _objectSpread(_objectSpread(_objectSpread({}, cellStyle), style), {}, {\n    flex: \"0 0 \".concat(concatColWidth, \"px\"),\n    width: \"\".concat(concatColWidth, \"px\"),\n    marginRight: marginOffset,\n    pointerEvents: 'auto'\n  }); // When `colSpan` or `rowSpan` is `0`, should skip render.\n\n\n  var needHide = React.useMemo(function () {\n    if (inverse) {\n      return rowSpan <= 1;\n    } else {\n      return colSpan === 0 || rowSpan === 0 || rowSpan > 1;\n    }\n  }, [rowSpan, colSpan, inverse]); // 0 rowSpan or colSpan should not render\n\n  if (needHide) {\n    mergedStyle.visibility = 'hidden';\n  } else if (inverse) {\n    mergedStyle.height = getHeight === null || getHeight === void 0 ? void 0 : getHeight(rowSpan);\n  }\n\n  var mergedRender = needHide ? function () {\n    return null;\n  } : render; // ========================== Render ==========================\n\n  var cellSpan = {}; // Virtual should reset `colSpan` & `rowSpan`\n\n  if (rowSpan === 0 || colSpan === 0) {\n    cellSpan.rowSpan = 1;\n    cellSpan.colSpan = 1;\n  }\n\n  return /*#__PURE__*/React.createElement(Cell, _extends({\n    className: classNames(columnClassName, className),\n    ellipsis: column.ellipsis,\n    align: column.align,\n    scope: column.rowScope,\n    component: \"div\",\n    prefixCls: rowInfo.prefixCls,\n    key: key,\n    record: record,\n    index: index,\n    renderIndex: renderIndex,\n    dataIndex: dataIndex,\n    render: mergedRender,\n    shouldCellUpdate: column.shouldCellUpdate\n  }, fixedInfo, {\n    appendNode: appendCellNode,\n    additionalProps: _objectSpread(_objectSpread({}, additionalCellProps), {}, {\n      style: mergedStyle\n    }, cellSpan)\n  }));\n}\n\nexport default VirtualCell;","map":{"version":3,"names":["_extends","_objectSpread","useContext","classNames","React","getCellProps","Cell","GridContext","getColumnWidth","colIndex","colSpan","columnsOffset","mergedColSpan","VirtualCell","props","rowInfo","column","indent","index","renderIndex","record","style","className","inverse","getHeight","render","dataIndex","columnClassName","colWidth","width","_useContext","_getCellProps","key","fixedInfo","appendCellNode","additionalCellProps","cellStyle","_additionalCellProps$","_additionalCellProps$2","rowSpan","startColIndex","concatColWidth","marginOffset","mergedStyle","flex","concat","marginRight","pointerEvents","needHide","useMemo","visibility","height","mergedRender","cellSpan","createElement","ellipsis","align","scope","rowScope","component","prefixCls","shouldCellUpdate","appendNode","additionalProps"],"sources":["/mnt/c/Users/Admin/crud-app/node_modules/rc-table/es/VirtualTable/VirtualCell.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { useContext } from '@rc-component/context';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { getCellProps } from \"../Body/BodyRow\";\nimport Cell from \"../Cell\";\nimport { GridContext } from \"./context\";\n/**\n * Return the width of the column by `colSpan`.\n * When `colSpan` is `0` will be trade as `1`.\n */\nexport function getColumnWidth(colIndex, colSpan, columnsOffset) {\n  var mergedColSpan = colSpan || 1;\n  return columnsOffset[colIndex + mergedColSpan] - (columnsOffset[colIndex] || 0);\n}\nfunction VirtualCell(props) {\n  var rowInfo = props.rowInfo,\n    column = props.column,\n    colIndex = props.colIndex,\n    indent = props.indent,\n    index = props.index,\n    renderIndex = props.renderIndex,\n    record = props.record,\n    style = props.style,\n    className = props.className,\n    inverse = props.inverse,\n    getHeight = props.getHeight;\n  var render = column.render,\n    dataIndex = column.dataIndex,\n    columnClassName = column.className,\n    colWidth = column.width;\n  var _useContext = useContext(GridContext, ['columnsOffset']),\n    columnsOffset = _useContext.columnsOffset;\n  var _getCellProps = getCellProps(rowInfo, column, colIndex, indent, index),\n    key = _getCellProps.key,\n    fixedInfo = _getCellProps.fixedInfo,\n    appendCellNode = _getCellProps.appendCellNode,\n    additionalCellProps = _getCellProps.additionalCellProps;\n  var cellStyle = additionalCellProps.style,\n    _additionalCellProps$ = additionalCellProps.colSpan,\n    colSpan = _additionalCellProps$ === void 0 ? 1 : _additionalCellProps$,\n    _additionalCellProps$2 = additionalCellProps.rowSpan,\n    rowSpan = _additionalCellProps$2 === void 0 ? 1 : _additionalCellProps$2;\n\n  // ========================= ColWidth =========================\n  // column width\n  var startColIndex = colIndex - 1;\n  var concatColWidth = getColumnWidth(startColIndex, colSpan, columnsOffset);\n\n  // margin offset\n  var marginOffset = colSpan > 1 ? colWidth - concatColWidth : 0;\n\n  // ========================== Style ===========================\n  var mergedStyle = _objectSpread(_objectSpread(_objectSpread({}, cellStyle), style), {}, {\n    flex: \"0 0 \".concat(concatColWidth, \"px\"),\n    width: \"\".concat(concatColWidth, \"px\"),\n    marginRight: marginOffset,\n    pointerEvents: 'auto'\n  });\n\n  // When `colSpan` or `rowSpan` is `0`, should skip render.\n  var needHide = React.useMemo(function () {\n    if (inverse) {\n      return rowSpan <= 1;\n    } else {\n      return colSpan === 0 || rowSpan === 0 || rowSpan > 1;\n    }\n  }, [rowSpan, colSpan, inverse]);\n\n  // 0 rowSpan or colSpan should not render\n  if (needHide) {\n    mergedStyle.visibility = 'hidden';\n  } else if (inverse) {\n    mergedStyle.height = getHeight === null || getHeight === void 0 ? void 0 : getHeight(rowSpan);\n  }\n  var mergedRender = needHide ? function () {\n    return null;\n  } : render;\n\n  // ========================== Render ==========================\n  var cellSpan = {};\n\n  // Virtual should reset `colSpan` & `rowSpan`\n  if (rowSpan === 0 || colSpan === 0) {\n    cellSpan.rowSpan = 1;\n    cellSpan.colSpan = 1;\n  }\n  return /*#__PURE__*/React.createElement(Cell, _extends({\n    className: classNames(columnClassName, className),\n    ellipsis: column.ellipsis,\n    align: column.align,\n    scope: column.rowScope,\n    component: \"div\",\n    prefixCls: rowInfo.prefixCls,\n    key: key,\n    record: record,\n    index: index,\n    renderIndex: renderIndex,\n    dataIndex: dataIndex,\n    render: mergedRender,\n    shouldCellUpdate: column.shouldCellUpdate\n  }, fixedInfo, {\n    appendNode: appendCellNode,\n    additionalProps: _objectSpread(_objectSpread({}, additionalCellProps), {}, {\n      style: mergedStyle\n    }, cellSpan)\n  }));\n}\nexport default VirtualCell;"],"mappings":"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"},"metadata":{},"sourceType":"module"}