{"ast":null,"code":"export const roundedArrow = (width, innerRadius, outerRadius, bgColor, boxShadow) => {\n  const unitWidth = width / 2;\n  const ax = 0;\n  const ay = unitWidth;\n  const bx = outerRadius * 1 / Math.sqrt(2);\n  const by = unitWidth - outerRadius * (1 - 1 / Math.sqrt(2));\n  const cx = unitWidth - innerRadius * (1 / Math.sqrt(2));\n  const cy = outerRadius * (Math.sqrt(2) - 1) + innerRadius * (1 / Math.sqrt(2));\n  const dx = 2 * unitWidth - cx;\n  const dy = cy;\n  const ex = 2 * unitWidth - bx;\n  const ey = by;\n  const fx = 2 * unitWidth - ax;\n  const fy = ay;\n  const shadowWidth = unitWidth * Math.sqrt(2) + outerRadius * (Math.sqrt(2) - 2);\n  const polygonOffset = outerRadius * (Math.sqrt(2) - 1);\n  return {\n    pointerEvents: 'none',\n    width,\n    height: width,\n    overflow: 'hidden',\n    '&::before': {\n      position: 'absolute',\n      bottom: 0,\n      insetInlineStart: 0,\n      width,\n      height: width / 2,\n      background: bgColor,\n      clipPath: {\n        _multi_value_: true,\n        value: [`polygon(${polygonOffset}px 100%, 50% ${polygonOffset}px, ${2 * unitWidth - polygonOffset}px 100%, ${polygonOffset}px 100%)`, `path('M ${ax} ${ay} A ${outerRadius} ${outerRadius} 0 0 0 ${bx} ${by} L ${cx} ${cy} A ${innerRadius} ${innerRadius} 0 0 1 ${dx} ${dy} L ${ex} ${ey} A ${outerRadius} ${outerRadius} 0 0 0 ${fx} ${fy} Z')`]\n      },\n      content: '\"\"'\n    },\n    '&::after': {\n      content: '\"\"',\n      position: 'absolute',\n      width: shadowWidth,\n      height: shadowWidth,\n      bottom: 0,\n      insetInline: 0,\n      margin: 'auto',\n      borderRadius: {\n        _skip_check_: true,\n        value: `0 0 ${innerRadius}px 0`\n      },\n      transform: 'translateY(50%) rotate(-135deg)',\n      boxShadow,\n      zIndex: 0,\n      background: 'transparent'\n    }\n  };\n};","map":{"version":3,"names":["roundedArrow","width","innerRadius","outerRadius","bgColor","boxShadow","unitWidth","ax","ay","bx","Math","sqrt","by","cx","cy","dx","dy","ex","ey","fx","fy","shadowWidth","polygonOffset","pointerEvents","height","overflow","position","bottom","insetInlineStart","background","clipPath","_multi_value_","value","content","insetInline","margin","borderRadius","_skip_check_","transform","zIndex"],"sources":["/mnt/c/Users/Admin/crud-app/node_modules/antd/es/style/roundedArrow.js"],"sourcesContent":["export const roundedArrow = (width, innerRadius, outerRadius, bgColor, boxShadow) => {\n  const unitWidth = width / 2;\n  const ax = 0;\n  const ay = unitWidth;\n  const bx = outerRadius * 1 / Math.sqrt(2);\n  const by = unitWidth - outerRadius * (1 - 1 / Math.sqrt(2));\n  const cx = unitWidth - innerRadius * (1 / Math.sqrt(2));\n  const cy = outerRadius * (Math.sqrt(2) - 1) + innerRadius * (1 / Math.sqrt(2));\n  const dx = 2 * unitWidth - cx;\n  const dy = cy;\n  const ex = 2 * unitWidth - bx;\n  const ey = by;\n  const fx = 2 * unitWidth - ax;\n  const fy = ay;\n  const shadowWidth = unitWidth * Math.sqrt(2) + outerRadius * (Math.sqrt(2) - 2);\n  const polygonOffset = outerRadius * (Math.sqrt(2) - 1);\n  return {\n    pointerEvents: 'none',\n    width,\n    height: width,\n    overflow: 'hidden',\n    '&::before': {\n      position: 'absolute',\n      bottom: 0,\n      insetInlineStart: 0,\n      width,\n      height: width / 2,\n      background: bgColor,\n      clipPath: {\n        _multi_value_: true,\n        value: [`polygon(${polygonOffset}px 100%, 50% ${polygonOffset}px, ${2 * unitWidth - polygonOffset}px 100%, ${polygonOffset}px 100%)`, `path('M ${ax} ${ay} A ${outerRadius} ${outerRadius} 0 0 0 ${bx} ${by} L ${cx} ${cy} A ${innerRadius} ${innerRadius} 0 0 1 ${dx} ${dy} L ${ex} ${ey} A ${outerRadius} ${outerRadius} 0 0 0 ${fx} ${fy} Z')`]\n      },\n      content: '\"\"'\n    },\n    '&::after': {\n      content: '\"\"',\n      position: 'absolute',\n      width: shadowWidth,\n      height: shadowWidth,\n      bottom: 0,\n      insetInline: 0,\n      margin: 'auto',\n      borderRadius: {\n        _skip_check_: true,\n        value: `0 0 ${innerRadius}px 0`\n      },\n      transform: 'translateY(50%) rotate(-135deg)',\n      boxShadow,\n      zIndex: 0,\n      background: 'transparent'\n    }\n  };\n};"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG,CAACC,KAAD,EAAQC,WAAR,EAAqBC,WAArB,EAAkCC,OAAlC,EAA2CC,SAA3C,KAAyD;EACnF,MAAMC,SAAS,GAAGL,KAAK,GAAG,CAA1B;EACA,MAAMM,EAAE,GAAG,CAAX;EACA,MAAMC,EAAE,GAAGF,SAAX;EACA,MAAMG,EAAE,GAAGN,WAAW,GAAG,CAAd,GAAkBO,IAAI,CAACC,IAAL,CAAU,CAAV,CAA7B;EACA,MAAMC,EAAE,GAAGN,SAAS,GAAGH,WAAW,IAAI,IAAI,IAAIO,IAAI,CAACC,IAAL,CAAU,CAAV,CAAZ,CAAlC;EACA,MAAME,EAAE,GAAGP,SAAS,GAAGJ,WAAW,IAAI,IAAIQ,IAAI,CAACC,IAAL,CAAU,CAAV,CAAR,CAAlC;EACA,MAAMG,EAAE,GAAGX,WAAW,IAAIO,IAAI,CAACC,IAAL,CAAU,CAAV,IAAe,CAAnB,CAAX,GAAmCT,WAAW,IAAI,IAAIQ,IAAI,CAACC,IAAL,CAAU,CAAV,CAAR,CAAzD;EACA,MAAMI,EAAE,GAAG,IAAIT,SAAJ,GAAgBO,EAA3B;EACA,MAAMG,EAAE,GAAGF,EAAX;EACA,MAAMG,EAAE,GAAG,IAAIX,SAAJ,GAAgBG,EAA3B;EACA,MAAMS,EAAE,GAAGN,EAAX;EACA,MAAMO,EAAE,GAAG,IAAIb,SAAJ,GAAgBC,EAA3B;EACA,MAAMa,EAAE,GAAGZ,EAAX;EACA,MAAMa,WAAW,GAAGf,SAAS,GAAGI,IAAI,CAACC,IAAL,CAAU,CAAV,CAAZ,GAA2BR,WAAW,IAAIO,IAAI,CAACC,IAAL,CAAU,CAAV,IAAe,CAAnB,CAA1D;EACA,MAAMW,aAAa,GAAGnB,WAAW,IAAIO,IAAI,CAACC,IAAL,CAAU,CAAV,IAAe,CAAnB,CAAjC;EACA,OAAO;IACLY,aAAa,EAAE,MADV;IAELtB,KAFK;IAGLuB,MAAM,EAAEvB,KAHH;IAILwB,QAAQ,EAAE,QAJL;IAKL,aAAa;MACXC,QAAQ,EAAE,UADC;MAEXC,MAAM,EAAE,CAFG;MAGXC,gBAAgB,EAAE,CAHP;MAIX3B,KAJW;MAKXuB,MAAM,EAAEvB,KAAK,GAAG,CALL;MAMX4B,UAAU,EAAEzB,OAND;MAOX0B,QAAQ,EAAE;QACRC,aAAa,EAAE,IADP;QAERC,KAAK,EAAE,CAAE,WAAUV,aAAc,gBAAeA,aAAc,OAAM,IAAIhB,SAAJ,GAAgBgB,aAAc,YAAWA,aAAc,UAApH,EAAgI,WAAUf,EAAG,IAAGC,EAAG,MAAKL,WAAY,IAAGA,WAAY,UAASM,EAAG,IAAGG,EAAG,MAAKC,EAAG,IAAGC,EAAG,MAAKZ,WAAY,IAAGA,WAAY,UAASa,EAAG,IAAGC,EAAG,MAAKC,EAAG,IAAGC,EAAG,MAAKf,WAAY,IAAGA,WAAY,UAASgB,EAAG,IAAGC,EAAG,MAArU;MAFC,CAPC;MAWXa,OAAO,EAAE;IAXE,CALR;IAkBL,YAAY;MACVA,OAAO,EAAE,IADC;MAEVP,QAAQ,EAAE,UAFA;MAGVzB,KAAK,EAAEoB,WAHG;MAIVG,MAAM,EAAEH,WAJE;MAKVM,MAAM,EAAE,CALE;MAMVO,WAAW,EAAE,CANH;MAOVC,MAAM,EAAE,MAPE;MAQVC,YAAY,EAAE;QACZC,YAAY,EAAE,IADF;QAEZL,KAAK,EAAG,OAAM9B,WAAY;MAFd,CARJ;MAYVoC,SAAS,EAAE,iCAZD;MAaVjC,SAbU;MAcVkC,MAAM,EAAE,CAdE;MAeVV,UAAU,EAAE;IAfF;EAlBP,CAAP;AAoCD,CApDM"},"metadata":{},"sourceType":"module"}