{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport hash from '@emotion/hash';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport StyleContext, { ATTR_TOKEN, CSS_IN_JS_INSTANCE } from \"../StyleContext\";\nimport { flattenToken, token2key } from \"../util\";\nimport useGlobalCache from \"./useGlobalCache\";\nvar EMPTY_OVERRIDE = {}; // Generate different prefix to make user selector break in production env.\n// This helps developer not to do style override directly on the hash id.\n\nvar hashPrefix = process.env.NODE_ENV !== 'production' ? 'css-dev-only-do-not-override' : 'css';\nvar tokenKeys = new Map();\n\nfunction recordCleanToken(tokenKey) {\n  tokenKeys.set(tokenKey, (tokenKeys.get(tokenKey) || 0) + 1);\n}\n\nfunction removeStyleTags(key, instanceId) {\n  if (typeof document !== 'undefined') {\n    var styles = document.querySelectorAll(\"style[\".concat(ATTR_TOKEN, \"=\\\"\").concat(key, \"\\\"]\"));\n    styles.forEach(function (style) {\n      if (style[CSS_IN_JS_INSTANCE] === instanceId) {\n        var _style$parentNode;\n\n        (_style$parentNode = style.parentNode) === null || _style$parentNode === void 0 ? void 0 : _style$parentNode.removeChild(style);\n      }\n    });\n  }\n}\n\nvar TOKEN_THRESHOLD = 0; // Remove will check current keys first\n\nfunction cleanTokenStyle(tokenKey, instanceId) {\n  tokenKeys.set(tokenKey, (tokenKeys.get(tokenKey) || 0) - 1);\n  var tokenKeyList = Array.from(tokenKeys.keys());\n  var cleanableKeyList = tokenKeyList.filter(function (key) {\n    var count = tokenKeys.get(key) || 0;\n    return count <= 0;\n  }); // Should keep tokens under threshold for not to insert style too often\n\n  if (tokenKeyList.length - cleanableKeyList.length > TOKEN_THRESHOLD) {\n    cleanableKeyList.forEach(function (key) {\n      removeStyleTags(key, instanceId);\n      tokenKeys.delete(key);\n    });\n  }\n}\n\nexport var getComputedToken = function getComputedToken(originToken, overrideToken, theme, format) {\n  var derivativeToken = theme.getDerivativeToken(originToken); // Merge with override\n\n  var mergedDerivativeToken = _objectSpread(_objectSpread({}, derivativeToken), overrideToken); // Format if needed\n\n\n  if (format) {\n    mergedDerivativeToken = format(mergedDerivativeToken);\n  }\n\n  return mergedDerivativeToken;\n};\n/**\n * Cache theme derivative token as global shared one\n * @param theme Theme entity\n * @param tokens List of tokens, used for cache. Please do not dynamic generate object directly\n * @param option Additional config\n * @returns Call Theme.getDerivativeToken(tokenObject) to get token\n */\n\nexport default function useCacheToken(theme, tokens) {\n  var option = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var _useContext = useContext(StyleContext),\n      instanceId = _useContext.cache.instanceId;\n\n  var _option$salt = option.salt,\n      salt = _option$salt === void 0 ? '' : _option$salt,\n      _option$override = option.override,\n      override = _option$override === void 0 ? EMPTY_OVERRIDE : _option$override,\n      formatToken = option.formatToken,\n      compute = option.getComputedToken; // Basic - We do basic cache here\n\n  var mergedToken = React.useMemo(function () {\n    return Object.assign.apply(Object, [{}].concat(_toConsumableArray(tokens)));\n  }, [tokens]);\n  var tokenStr = React.useMemo(function () {\n    return flattenToken(mergedToken);\n  }, [mergedToken]);\n  var overrideTokenStr = React.useMemo(function () {\n    return flattenToken(override);\n  }, [override]);\n  var cachedToken = useGlobalCache('token', [salt, theme.id, tokenStr, overrideTokenStr], function () {\n    var mergedDerivativeToken = compute ? compute(mergedToken, override, theme) : getComputedToken(mergedToken, override, theme, formatToken); // Optimize for `useStyleRegister` performance\n\n    var tokenKey = token2key(mergedDerivativeToken, salt);\n    mergedDerivativeToken._tokenKey = tokenKey;\n    recordCleanToken(tokenKey);\n    var hashId = \"\".concat(hashPrefix, \"-\").concat(hash(tokenKey));\n    mergedDerivativeToken._hashId = hashId; // Not used\n\n    return [mergedDerivativeToken, hashId];\n  }, function (cache) {\n    // Remove token will remove all related style\n    cleanTokenStyle(cache[0]._tokenKey, instanceId);\n  });\n  return cachedToken;\n}","map":{"version":3,"names":["_toConsumableArray","_objectSpread","hash","React","useContext","StyleContext","ATTR_TOKEN","CSS_IN_JS_INSTANCE","flattenToken","token2key","useGlobalCache","EMPTY_OVERRIDE","hashPrefix","process","env","NODE_ENV","tokenKeys","Map","recordCleanToken","tokenKey","set","get","removeStyleTags","key","instanceId","document","styles","querySelectorAll","concat","forEach","style","_style$parentNode","parentNode","removeChild","TOKEN_THRESHOLD","cleanTokenStyle","tokenKeyList","Array","from","keys","cleanableKeyList","filter","count","length","delete","getComputedToken","originToken","overrideToken","theme","format","derivativeToken","getDerivativeToken","mergedDerivativeToken","useCacheToken","tokens","option","arguments","undefined","_useContext","cache","_option$salt","salt","_option$override","override","formatToken","compute","mergedToken","useMemo","Object","assign","apply","tokenStr","overrideTokenStr","cachedToken","id","_tokenKey","hashId","_hashId"],"sources":["/mnt/c/Users/Admin/crud-app/node_modules/@ant-design/cssinjs/es/hooks/useCacheToken.js"],"sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport hash from '@emotion/hash';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport StyleContext, { ATTR_TOKEN, CSS_IN_JS_INSTANCE } from \"../StyleContext\";\nimport { flattenToken, token2key } from \"../util\";\nimport useGlobalCache from \"./useGlobalCache\";\nvar EMPTY_OVERRIDE = {};\n\n// Generate different prefix to make user selector break in production env.\n// This helps developer not to do style override directly on the hash id.\nvar hashPrefix = process.env.NODE_ENV !== 'production' ? 'css-dev-only-do-not-override' : 'css';\nvar tokenKeys = new Map();\nfunction recordCleanToken(tokenKey) {\n  tokenKeys.set(tokenKey, (tokenKeys.get(tokenKey) || 0) + 1);\n}\nfunction removeStyleTags(key, instanceId) {\n  if (typeof document !== 'undefined') {\n    var styles = document.querySelectorAll(\"style[\".concat(ATTR_TOKEN, \"=\\\"\").concat(key, \"\\\"]\"));\n    styles.forEach(function (style) {\n      if (style[CSS_IN_JS_INSTANCE] === instanceId) {\n        var _style$parentNode;\n        (_style$parentNode = style.parentNode) === null || _style$parentNode === void 0 ? void 0 : _style$parentNode.removeChild(style);\n      }\n    });\n  }\n}\nvar TOKEN_THRESHOLD = 0;\n\n// Remove will check current keys first\nfunction cleanTokenStyle(tokenKey, instanceId) {\n  tokenKeys.set(tokenKey, (tokenKeys.get(tokenKey) || 0) - 1);\n  var tokenKeyList = Array.from(tokenKeys.keys());\n  var cleanableKeyList = tokenKeyList.filter(function (key) {\n    var count = tokenKeys.get(key) || 0;\n    return count <= 0;\n  });\n\n  // Should keep tokens under threshold for not to insert style too often\n  if (tokenKeyList.length - cleanableKeyList.length > TOKEN_THRESHOLD) {\n    cleanableKeyList.forEach(function (key) {\n      removeStyleTags(key, instanceId);\n      tokenKeys.delete(key);\n    });\n  }\n}\nexport var getComputedToken = function getComputedToken(originToken, overrideToken, theme, format) {\n  var derivativeToken = theme.getDerivativeToken(originToken);\n\n  // Merge with override\n  var mergedDerivativeToken = _objectSpread(_objectSpread({}, derivativeToken), overrideToken);\n\n  // Format if needed\n  if (format) {\n    mergedDerivativeToken = format(mergedDerivativeToken);\n  }\n  return mergedDerivativeToken;\n};\n\n/**\n * Cache theme derivative token as global shared one\n * @param theme Theme entity\n * @param tokens List of tokens, used for cache. Please do not dynamic generate object directly\n * @param option Additional config\n * @returns Call Theme.getDerivativeToken(tokenObject) to get token\n */\nexport default function useCacheToken(theme, tokens) {\n  var option = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var _useContext = useContext(StyleContext),\n    instanceId = _useContext.cache.instanceId;\n  var _option$salt = option.salt,\n    salt = _option$salt === void 0 ? '' : _option$salt,\n    _option$override = option.override,\n    override = _option$override === void 0 ? EMPTY_OVERRIDE : _option$override,\n    formatToken = option.formatToken,\n    compute = option.getComputedToken;\n\n  // Basic - We do basic cache here\n  var mergedToken = React.useMemo(function () {\n    return Object.assign.apply(Object, [{}].concat(_toConsumableArray(tokens)));\n  }, [tokens]);\n  var tokenStr = React.useMemo(function () {\n    return flattenToken(mergedToken);\n  }, [mergedToken]);\n  var overrideTokenStr = React.useMemo(function () {\n    return flattenToken(override);\n  }, [override]);\n  var cachedToken = useGlobalCache('token', [salt, theme.id, tokenStr, overrideTokenStr], function () {\n    var mergedDerivativeToken = compute ? compute(mergedToken, override, theme) : getComputedToken(mergedToken, override, theme, formatToken);\n\n    // Optimize for `useStyleRegister` performance\n    var tokenKey = token2key(mergedDerivativeToken, salt);\n    mergedDerivativeToken._tokenKey = tokenKey;\n    recordCleanToken(tokenKey);\n    var hashId = \"\".concat(hashPrefix, \"-\").concat(hash(tokenKey));\n    mergedDerivativeToken._hashId = hashId; // Not used\n\n    return [mergedDerivativeToken, hashId];\n  }, function (cache) {\n    // Remove token will remove all related style\n    cleanTokenStyle(cache[0]._tokenKey, instanceId);\n  });\n  return cachedToken;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}