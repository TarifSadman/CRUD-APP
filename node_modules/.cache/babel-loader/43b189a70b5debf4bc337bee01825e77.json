{"ast":null,"code":"import { setTime as utilSetTime } from \"../utils/timeUtil\";\nexport default function useTimeSelection(_ref) {\n  var value = _ref.value,\n      generateConfig = _ref.generateConfig,\n      disabledMinutes = _ref.disabledMinutes,\n      disabledSeconds = _ref.disabledSeconds,\n      minutes = _ref.minutes,\n      seconds = _ref.seconds,\n      use12Hours = _ref.use12Hours;\n\n  var setTime = function setTime(isNewPM, newHour, newMinute, newSecond) {\n    var now = generateConfig.getNow();\n    var newDate = value || now;\n    var mergedHour = newHour < 0 ? generateConfig.getHour(now) : newHour;\n    var mergedMinute = newMinute < 0 ? generateConfig.getMinute(now) : newMinute;\n    var mergedSecond = newSecond < 0 ? generateConfig.getSecond(now) : newSecond;\n    var newDisabledMinutes = disabledMinutes && disabledMinutes(mergedHour);\n\n    if (newDisabledMinutes !== null && newDisabledMinutes !== void 0 && newDisabledMinutes.includes(mergedMinute)) {\n      // find the first available minute in minutes\n      var availableMinute = minutes.find(function (i) {\n        return !newDisabledMinutes.includes(i.value);\n      });\n\n      if (availableMinute) {\n        mergedMinute = availableMinute.value;\n      } else {\n        return null;\n      }\n    }\n\n    var newDisabledSeconds = disabledSeconds && disabledSeconds(mergedHour, mergedMinute);\n\n    if (newDisabledSeconds !== null && newDisabledSeconds !== void 0 && newDisabledSeconds.includes(mergedSecond)) {\n      // find the first available second in seconds\n      var availableSecond = seconds.find(function (i) {\n        return !newDisabledSeconds.includes(i.value);\n      });\n\n      if (availableSecond) {\n        mergedSecond = availableSecond.value;\n      } else {\n        return null;\n      }\n    }\n\n    newDate = utilSetTime(generateConfig, newDate, !use12Hours || !isNewPM ? mergedHour : mergedHour + 12, mergedMinute, mergedSecond);\n    return newDate;\n  };\n\n  return setTime;\n}","map":{"version":3,"names":["setTime","utilSetTime","useTimeSelection","_ref","value","generateConfig","disabledMinutes","disabledSeconds","minutes","seconds","use12Hours","isNewPM","newHour","newMinute","newSecond","now","getNow","newDate","mergedHour","getHour","mergedMinute","getMinute","mergedSecond","getSecond","newDisabledMinutes","includes","availableMinute","find","i","newDisabledSeconds","availableSecond"],"sources":["/mnt/c/Users/Admin/crud-app/node_modules/rc-picker/es/hooks/useTimeSelection.js"],"sourcesContent":["import { setTime as utilSetTime } from \"../utils/timeUtil\";\nexport default function useTimeSelection(_ref) {\n  var value = _ref.value,\n    generateConfig = _ref.generateConfig,\n    disabledMinutes = _ref.disabledMinutes,\n    disabledSeconds = _ref.disabledSeconds,\n    minutes = _ref.minutes,\n    seconds = _ref.seconds,\n    use12Hours = _ref.use12Hours;\n  var setTime = function setTime(isNewPM, newHour, newMinute, newSecond) {\n    var now = generateConfig.getNow();\n    var newDate = value || now;\n    var mergedHour = newHour < 0 ? generateConfig.getHour(now) : newHour;\n    var mergedMinute = newMinute < 0 ? generateConfig.getMinute(now) : newMinute;\n    var mergedSecond = newSecond < 0 ? generateConfig.getSecond(now) : newSecond;\n    var newDisabledMinutes = disabledMinutes && disabledMinutes(mergedHour);\n    if (newDisabledMinutes !== null && newDisabledMinutes !== void 0 && newDisabledMinutes.includes(mergedMinute)) {\n      // find the first available minute in minutes\n      var availableMinute = minutes.find(function (i) {\n        return !newDisabledMinutes.includes(i.value);\n      });\n      if (availableMinute) {\n        mergedMinute = availableMinute.value;\n      } else {\n        return null;\n      }\n    }\n    var newDisabledSeconds = disabledSeconds && disabledSeconds(mergedHour, mergedMinute);\n    if (newDisabledSeconds !== null && newDisabledSeconds !== void 0 && newDisabledSeconds.includes(mergedSecond)) {\n      // find the first available second in seconds\n      var availableSecond = seconds.find(function (i) {\n        return !newDisabledSeconds.includes(i.value);\n      });\n      if (availableSecond) {\n        mergedSecond = availableSecond.value;\n      } else {\n        return null;\n      }\n    }\n    newDate = utilSetTime(generateConfig, newDate, !use12Hours || !isNewPM ? mergedHour : mergedHour + 12, mergedMinute, mergedSecond);\n    return newDate;\n  };\n  return setTime;\n}"],"mappings":"AAAA,SAASA,OAAO,IAAIC,WAApB,QAAuC,mBAAvC;AACA,eAAe,SAASC,gBAAT,CAA0BC,IAA1B,EAAgC;EAC7C,IAAIC,KAAK,GAAGD,IAAI,CAACC,KAAjB;EAAA,IACEC,cAAc,GAAGF,IAAI,CAACE,cADxB;EAAA,IAEEC,eAAe,GAAGH,IAAI,CAACG,eAFzB;EAAA,IAGEC,eAAe,GAAGJ,IAAI,CAACI,eAHzB;EAAA,IAIEC,OAAO,GAAGL,IAAI,CAACK,OAJjB;EAAA,IAKEC,OAAO,GAAGN,IAAI,CAACM,OALjB;EAAA,IAMEC,UAAU,GAAGP,IAAI,CAACO,UANpB;;EAOA,IAAIV,OAAO,GAAG,SAASA,OAAT,CAAiBW,OAAjB,EAA0BC,OAA1B,EAAmCC,SAAnC,EAA8CC,SAA9C,EAAyD;IACrE,IAAIC,GAAG,GAAGV,cAAc,CAACW,MAAf,EAAV;IACA,IAAIC,OAAO,GAAGb,KAAK,IAAIW,GAAvB;IACA,IAAIG,UAAU,GAAGN,OAAO,GAAG,CAAV,GAAcP,cAAc,CAACc,OAAf,CAAuBJ,GAAvB,CAAd,GAA4CH,OAA7D;IACA,IAAIQ,YAAY,GAAGP,SAAS,GAAG,CAAZ,GAAgBR,cAAc,CAACgB,SAAf,CAAyBN,GAAzB,CAAhB,GAAgDF,SAAnE;IACA,IAAIS,YAAY,GAAGR,SAAS,GAAG,CAAZ,GAAgBT,cAAc,CAACkB,SAAf,CAAyBR,GAAzB,CAAhB,GAAgDD,SAAnE;IACA,IAAIU,kBAAkB,GAAGlB,eAAe,IAAIA,eAAe,CAACY,UAAD,CAA3D;;IACA,IAAIM,kBAAkB,KAAK,IAAvB,IAA+BA,kBAAkB,KAAK,KAAK,CAA3D,IAAgEA,kBAAkB,CAACC,QAAnB,CAA4BL,YAA5B,CAApE,EAA+G;MAC7G;MACA,IAAIM,eAAe,GAAGlB,OAAO,CAACmB,IAAR,CAAa,UAAUC,CAAV,EAAa;QAC9C,OAAO,CAACJ,kBAAkB,CAACC,QAAnB,CAA4BG,CAAC,CAACxB,KAA9B,CAAR;MACD,CAFqB,CAAtB;;MAGA,IAAIsB,eAAJ,EAAqB;QACnBN,YAAY,GAAGM,eAAe,CAACtB,KAA/B;MACD,CAFD,MAEO;QACL,OAAO,IAAP;MACD;IACF;;IACD,IAAIyB,kBAAkB,GAAGtB,eAAe,IAAIA,eAAe,CAACW,UAAD,EAAaE,YAAb,CAA3D;;IACA,IAAIS,kBAAkB,KAAK,IAAvB,IAA+BA,kBAAkB,KAAK,KAAK,CAA3D,IAAgEA,kBAAkB,CAACJ,QAAnB,CAA4BH,YAA5B,CAApE,EAA+G;MAC7G;MACA,IAAIQ,eAAe,GAAGrB,OAAO,CAACkB,IAAR,CAAa,UAAUC,CAAV,EAAa;QAC9C,OAAO,CAACC,kBAAkB,CAACJ,QAAnB,CAA4BG,CAAC,CAACxB,KAA9B,CAAR;MACD,CAFqB,CAAtB;;MAGA,IAAI0B,eAAJ,EAAqB;QACnBR,YAAY,GAAGQ,eAAe,CAAC1B,KAA/B;MACD,CAFD,MAEO;QACL,OAAO,IAAP;MACD;IACF;;IACDa,OAAO,GAAGhB,WAAW,CAACI,cAAD,EAAiBY,OAAjB,EAA0B,CAACP,UAAD,IAAe,CAACC,OAAhB,GAA0BO,UAA1B,GAAuCA,UAAU,GAAG,EAA9E,EAAkFE,YAAlF,EAAgGE,YAAhG,CAArB;IACA,OAAOL,OAAP;EACD,CAhCD;;EAiCA,OAAOjB,OAAP;AACD"},"metadata":{},"sourceType":"module"}