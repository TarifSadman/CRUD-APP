{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"children\"],\n    _excluded2 = [\"fixed\"];\nimport toArray from \"rc-util/es/Children/toArray\";\nimport warning from \"rc-util/es/warning\";\nimport * as React from 'react';\nimport { EXPAND_COLUMN } from \"../../constant\";\nimport { INTERNAL_COL_DEFINE } from \"../../utils/legacyUtil\";\nimport useWidthColumns from \"./useWidthColumns\";\nexport function convertChildrenToColumns(children) {\n  return toArray(children).filter(function (node) {\n    return /*#__PURE__*/React.isValidElement(node);\n  }).map(function (_ref) {\n    var key = _ref.key,\n        props = _ref.props;\n\n    var nodeChildren = props.children,\n        restProps = _objectWithoutProperties(props, _excluded);\n\n    var column = _objectSpread({\n      key: key\n    }, restProps);\n\n    if (nodeChildren) {\n      column.children = convertChildrenToColumns(nodeChildren);\n    }\n\n    return column;\n  });\n}\n\nfunction flatColumns(columns) {\n  var parentKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key';\n  return columns.filter(function (column) {\n    return column && _typeof(column) === 'object';\n  }).reduce(function (list, column, index) {\n    var fixed = column.fixed; // Convert `fixed='true'` to `fixed='left'` instead\n\n    var parsedFixed = fixed === true ? 'left' : fixed;\n    var mergedKey = \"\".concat(parentKey, \"-\").concat(index);\n    var subColumns = column.children;\n\n    if (subColumns && subColumns.length > 0) {\n      return [].concat(_toConsumableArray(list), _toConsumableArray(flatColumns(subColumns, mergedKey).map(function (subColum) {\n        return _objectSpread({\n          fixed: parsedFixed\n        }, subColum);\n      })));\n    }\n\n    return [].concat(_toConsumableArray(list), [_objectSpread(_objectSpread({\n      key: mergedKey\n    }, column), {}, {\n      fixed: parsedFixed\n    })]);\n  }, []);\n}\n\nfunction warningFixed(flattenColumns) {\n  var allFixLeft = true;\n\n  for (var i = 0; i < flattenColumns.length; i += 1) {\n    var col = flattenColumns[i];\n\n    if (allFixLeft && col.fixed !== 'left') {\n      allFixLeft = false;\n    } else if (!allFixLeft && col.fixed === 'left') {\n      warning(false, \"Index \".concat(i - 1, \" of `columns` missing `fixed='left'` prop.\"));\n      break;\n    }\n  }\n\n  var allFixRight = true;\n\n  for (var _i = flattenColumns.length - 1; _i >= 0; _i -= 1) {\n    var _col = flattenColumns[_i];\n\n    if (allFixRight && _col.fixed !== 'right') {\n      allFixRight = false;\n    } else if (!allFixRight && _col.fixed === 'right') {\n      warning(false, \"Index \".concat(_i + 1, \" of `columns` missing `fixed='right'` prop.\"));\n      break;\n    }\n  }\n}\n\nfunction revertForRtl(columns) {\n  return columns.map(function (column) {\n    var fixed = column.fixed,\n        restProps = _objectWithoutProperties(column, _excluded2); // Convert `fixed='left'` to `fixed='right'` instead\n\n\n    var parsedFixed = fixed;\n\n    if (fixed === 'left') {\n      parsedFixed = 'right';\n    } else if (fixed === 'right') {\n      parsedFixed = 'left';\n    }\n\n    return _objectSpread({\n      fixed: parsedFixed\n    }, restProps);\n  });\n}\n/**\n * Parse `columns` & `children` into `columns`.\n */\n\n\nfunction useColumns(_ref2, transformColumns) {\n  var prefixCls = _ref2.prefixCls,\n      columns = _ref2.columns,\n      children = _ref2.children,\n      expandable = _ref2.expandable,\n      expandedKeys = _ref2.expandedKeys,\n      columnTitle = _ref2.columnTitle,\n      getRowKey = _ref2.getRowKey,\n      onTriggerExpand = _ref2.onTriggerExpand,\n      expandIcon = _ref2.expandIcon,\n      rowExpandable = _ref2.rowExpandable,\n      expandIconColumnIndex = _ref2.expandIconColumnIndex,\n      direction = _ref2.direction,\n      expandRowByClick = _ref2.expandRowByClick,\n      columnWidth = _ref2.columnWidth,\n      fixed = _ref2.fixed,\n      scrollWidth = _ref2.scrollWidth,\n      clientWidth = _ref2.clientWidth;\n  var baseColumns = React.useMemo(function () {\n    return columns || convertChildrenToColumns(children);\n  }, [columns, children]); // ========================== Expand ==========================\n\n  var withExpandColumns = React.useMemo(function () {\n    if (expandable) {\n      var _expandColumn;\n\n      var cloneColumns = baseColumns.slice(); // >>> Warning if use `expandIconColumnIndex`\n\n      if (process.env.NODE_ENV !== 'production' && expandIconColumnIndex >= 0) {\n        warning(false, '`expandIconColumnIndex` is deprecated. Please use `Table.EXPAND_COLUMN` in `columns` instead.');\n      } // >>> Insert expand column if not exist\n\n\n      if (!cloneColumns.includes(EXPAND_COLUMN)) {\n        var expandColIndex = expandIconColumnIndex || 0;\n\n        if (expandColIndex >= 0) {\n          cloneColumns.splice(expandColIndex, 0, EXPAND_COLUMN);\n        }\n      } // >>> Deduplicate additional expand column\n\n\n      if (process.env.NODE_ENV !== 'production' && cloneColumns.filter(function (c) {\n        return c === EXPAND_COLUMN;\n      }).length > 1) {\n        warning(false, 'There exist more than one `EXPAND_COLUMN` in `columns`.');\n      }\n\n      var expandColumnIndex = cloneColumns.indexOf(EXPAND_COLUMN);\n      cloneColumns = cloneColumns.filter(function (column, index) {\n        return column !== EXPAND_COLUMN || index === expandColumnIndex;\n      }); // >>> Check if expand column need to fixed\n\n      var prevColumn = baseColumns[expandColumnIndex];\n      var fixedColumn;\n\n      if ((fixed === 'left' || fixed) && !expandIconColumnIndex) {\n        fixedColumn = 'left';\n      } else if ((fixed === 'right' || fixed) && expandIconColumnIndex === baseColumns.length) {\n        fixedColumn = 'right';\n      } else {\n        fixedColumn = prevColumn ? prevColumn.fixed : null;\n      } // >>> Create expandable column\n\n\n      var expandColumn = (_expandColumn = {}, _defineProperty(_expandColumn, INTERNAL_COL_DEFINE, {\n        className: \"\".concat(prefixCls, \"-expand-icon-col\"),\n        columnType: 'EXPAND_COLUMN'\n      }), _defineProperty(_expandColumn, \"title\", columnTitle), _defineProperty(_expandColumn, \"fixed\", fixedColumn), _defineProperty(_expandColumn, \"className\", \"\".concat(prefixCls, \"-row-expand-icon-cell\")), _defineProperty(_expandColumn, \"width\", columnWidth), _defineProperty(_expandColumn, \"render\", function render(_, record, index) {\n        var rowKey = getRowKey(record, index);\n        var expanded = expandedKeys.has(rowKey);\n        var recordExpandable = rowExpandable ? rowExpandable(record) : true;\n        var icon = expandIcon({\n          prefixCls: prefixCls,\n          expanded: expanded,\n          expandable: recordExpandable,\n          record: record,\n          onExpand: onTriggerExpand\n        });\n\n        if (expandRowByClick) {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            }\n          }, icon);\n        }\n\n        return icon;\n      }), _expandColumn);\n      return cloneColumns.map(function (col) {\n        return col === EXPAND_COLUMN ? expandColumn : col;\n      });\n    }\n\n    if (process.env.NODE_ENV !== 'production' && baseColumns.includes(EXPAND_COLUMN)) {\n      warning(false, '`expandable` is not config but there exist `EXPAND_COLUMN` in `columns`.');\n    }\n\n    return baseColumns.filter(function (col) {\n      return col !== EXPAND_COLUMN;\n    });\n  }, [expandable, baseColumns, getRowKey, expandedKeys, expandIcon, direction]); // ========================= Transform ========================\n\n  var mergedColumns = React.useMemo(function () {\n    var finalColumns = withExpandColumns;\n\n    if (transformColumns) {\n      finalColumns = transformColumns(finalColumns);\n    } // Always provides at least one column for table display\n\n\n    if (!finalColumns.length) {\n      finalColumns = [{\n        render: function render() {\n          return null;\n        }\n      }];\n    }\n\n    return finalColumns;\n  }, [transformColumns, withExpandColumns, direction]); // ========================== Flatten =========================\n\n  var flattenColumns = React.useMemo(function () {\n    if (direction === 'rtl') {\n      return revertForRtl(flatColumns(mergedColumns));\n    }\n\n    return flatColumns(mergedColumns);\n  }, [mergedColumns, direction, scrollWidth]); // Only check out of production since it's waste for each render\n\n  if (process.env.NODE_ENV !== 'production') {\n    warningFixed(direction === 'rtl' ? flattenColumns.slice().reverse() : flattenColumns);\n  } // ========================= FillWidth ========================\n\n\n  var _useWidthColumns = useWidthColumns(flattenColumns, scrollWidth, clientWidth),\n      _useWidthColumns2 = _slicedToArray(_useWidthColumns, 2),\n      filledColumns = _useWidthColumns2[0],\n      realScrollWidth = _useWidthColumns2[1];\n\n  return [mergedColumns, filledColumns, realScrollWidth];\n}\n\nexport default useColumns;","map":{"version":3,"names":["_slicedToArray","_defineProperty","_toConsumableArray","_typeof","_objectSpread","_objectWithoutProperties","_excluded","_excluded2","toArray","warning","React","EXPAND_COLUMN","INTERNAL_COL_DEFINE","useWidthColumns","convertChildrenToColumns","children","filter","node","isValidElement","map","_ref","key","props","nodeChildren","restProps","column","flatColumns","columns","parentKey","arguments","length","undefined","reduce","list","index","fixed","parsedFixed","mergedKey","concat","subColumns","subColum","warningFixed","flattenColumns","allFixLeft","i","col","allFixRight","_i","_col","revertForRtl","useColumns","_ref2","transformColumns","prefixCls","expandable","expandedKeys","columnTitle","getRowKey","onTriggerExpand","expandIcon","rowExpandable","expandIconColumnIndex","direction","expandRowByClick","columnWidth","scrollWidth","clientWidth","baseColumns","useMemo","withExpandColumns","_expandColumn","cloneColumns","slice","process","env","NODE_ENV","includes","expandColIndex","splice","c","expandColumnIndex","indexOf","prevColumn","fixedColumn","expandColumn","className","columnType","render","_","record","rowKey","expanded","has","recordExpandable","icon","onExpand","createElement","onClick","e","stopPropagation","mergedColumns","finalColumns","reverse","_useWidthColumns","_useWidthColumns2","filledColumns","realScrollWidth"],"sources":["/mnt/c/Users/Admin/crud-app/node_modules/rc-table/es/hooks/useColumns/index.js"],"sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"children\"],\n  _excluded2 = [\"fixed\"];\nimport toArray from \"rc-util/es/Children/toArray\";\nimport warning from \"rc-util/es/warning\";\nimport * as React from 'react';\nimport { EXPAND_COLUMN } from \"../../constant\";\nimport { INTERNAL_COL_DEFINE } from \"../../utils/legacyUtil\";\nimport useWidthColumns from \"./useWidthColumns\";\nexport function convertChildrenToColumns(children) {\n  return toArray(children).filter(function (node) {\n    return /*#__PURE__*/React.isValidElement(node);\n  }).map(function (_ref) {\n    var key = _ref.key,\n      props = _ref.props;\n    var nodeChildren = props.children,\n      restProps = _objectWithoutProperties(props, _excluded);\n    var column = _objectSpread({\n      key: key\n    }, restProps);\n    if (nodeChildren) {\n      column.children = convertChildrenToColumns(nodeChildren);\n    }\n    return column;\n  });\n}\nfunction flatColumns(columns) {\n  var parentKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key';\n  return columns.filter(function (column) {\n    return column && _typeof(column) === 'object';\n  }).reduce(function (list, column, index) {\n    var fixed = column.fixed;\n    // Convert `fixed='true'` to `fixed='left'` instead\n    var parsedFixed = fixed === true ? 'left' : fixed;\n    var mergedKey = \"\".concat(parentKey, \"-\").concat(index);\n    var subColumns = column.children;\n    if (subColumns && subColumns.length > 0) {\n      return [].concat(_toConsumableArray(list), _toConsumableArray(flatColumns(subColumns, mergedKey).map(function (subColum) {\n        return _objectSpread({\n          fixed: parsedFixed\n        }, subColum);\n      })));\n    }\n    return [].concat(_toConsumableArray(list), [_objectSpread(_objectSpread({\n      key: mergedKey\n    }, column), {}, {\n      fixed: parsedFixed\n    })]);\n  }, []);\n}\nfunction warningFixed(flattenColumns) {\n  var allFixLeft = true;\n  for (var i = 0; i < flattenColumns.length; i += 1) {\n    var col = flattenColumns[i];\n    if (allFixLeft && col.fixed !== 'left') {\n      allFixLeft = false;\n    } else if (!allFixLeft && col.fixed === 'left') {\n      warning(false, \"Index \".concat(i - 1, \" of `columns` missing `fixed='left'` prop.\"));\n      break;\n    }\n  }\n  var allFixRight = true;\n  for (var _i = flattenColumns.length - 1; _i >= 0; _i -= 1) {\n    var _col = flattenColumns[_i];\n    if (allFixRight && _col.fixed !== 'right') {\n      allFixRight = false;\n    } else if (!allFixRight && _col.fixed === 'right') {\n      warning(false, \"Index \".concat(_i + 1, \" of `columns` missing `fixed='right'` prop.\"));\n      break;\n    }\n  }\n}\nfunction revertForRtl(columns) {\n  return columns.map(function (column) {\n    var fixed = column.fixed,\n      restProps = _objectWithoutProperties(column, _excluded2);\n\n    // Convert `fixed='left'` to `fixed='right'` instead\n    var parsedFixed = fixed;\n    if (fixed === 'left') {\n      parsedFixed = 'right';\n    } else if (fixed === 'right') {\n      parsedFixed = 'left';\n    }\n    return _objectSpread({\n      fixed: parsedFixed\n    }, restProps);\n  });\n}\n\n/**\n * Parse `columns` & `children` into `columns`.\n */\nfunction useColumns(_ref2, transformColumns) {\n  var prefixCls = _ref2.prefixCls,\n    columns = _ref2.columns,\n    children = _ref2.children,\n    expandable = _ref2.expandable,\n    expandedKeys = _ref2.expandedKeys,\n    columnTitle = _ref2.columnTitle,\n    getRowKey = _ref2.getRowKey,\n    onTriggerExpand = _ref2.onTriggerExpand,\n    expandIcon = _ref2.expandIcon,\n    rowExpandable = _ref2.rowExpandable,\n    expandIconColumnIndex = _ref2.expandIconColumnIndex,\n    direction = _ref2.direction,\n    expandRowByClick = _ref2.expandRowByClick,\n    columnWidth = _ref2.columnWidth,\n    fixed = _ref2.fixed,\n    scrollWidth = _ref2.scrollWidth,\n    clientWidth = _ref2.clientWidth;\n  var baseColumns = React.useMemo(function () {\n    return columns || convertChildrenToColumns(children);\n  }, [columns, children]);\n\n  // ========================== Expand ==========================\n  var withExpandColumns = React.useMemo(function () {\n    if (expandable) {\n      var _expandColumn;\n      var cloneColumns = baseColumns.slice();\n\n      // >>> Warning if use `expandIconColumnIndex`\n      if (process.env.NODE_ENV !== 'production' && expandIconColumnIndex >= 0) {\n        warning(false, '`expandIconColumnIndex` is deprecated. Please use `Table.EXPAND_COLUMN` in `columns` instead.');\n      }\n\n      // >>> Insert expand column if not exist\n      if (!cloneColumns.includes(EXPAND_COLUMN)) {\n        var expandColIndex = expandIconColumnIndex || 0;\n        if (expandColIndex >= 0) {\n          cloneColumns.splice(expandColIndex, 0, EXPAND_COLUMN);\n        }\n      }\n\n      // >>> Deduplicate additional expand column\n      if (process.env.NODE_ENV !== 'production' && cloneColumns.filter(function (c) {\n        return c === EXPAND_COLUMN;\n      }).length > 1) {\n        warning(false, 'There exist more than one `EXPAND_COLUMN` in `columns`.');\n      }\n      var expandColumnIndex = cloneColumns.indexOf(EXPAND_COLUMN);\n      cloneColumns = cloneColumns.filter(function (column, index) {\n        return column !== EXPAND_COLUMN || index === expandColumnIndex;\n      });\n\n      // >>> Check if expand column need to fixed\n      var prevColumn = baseColumns[expandColumnIndex];\n      var fixedColumn;\n      if ((fixed === 'left' || fixed) && !expandIconColumnIndex) {\n        fixedColumn = 'left';\n      } else if ((fixed === 'right' || fixed) && expandIconColumnIndex === baseColumns.length) {\n        fixedColumn = 'right';\n      } else {\n        fixedColumn = prevColumn ? prevColumn.fixed : null;\n      }\n\n      // >>> Create expandable column\n      var expandColumn = (_expandColumn = {}, _defineProperty(_expandColumn, INTERNAL_COL_DEFINE, {\n        className: \"\".concat(prefixCls, \"-expand-icon-col\"),\n        columnType: 'EXPAND_COLUMN'\n      }), _defineProperty(_expandColumn, \"title\", columnTitle), _defineProperty(_expandColumn, \"fixed\", fixedColumn), _defineProperty(_expandColumn, \"className\", \"\".concat(prefixCls, \"-row-expand-icon-cell\")), _defineProperty(_expandColumn, \"width\", columnWidth), _defineProperty(_expandColumn, \"render\", function render(_, record, index) {\n        var rowKey = getRowKey(record, index);\n        var expanded = expandedKeys.has(rowKey);\n        var recordExpandable = rowExpandable ? rowExpandable(record) : true;\n        var icon = expandIcon({\n          prefixCls: prefixCls,\n          expanded: expanded,\n          expandable: recordExpandable,\n          record: record,\n          onExpand: onTriggerExpand\n        });\n        if (expandRowByClick) {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            }\n          }, icon);\n        }\n        return icon;\n      }), _expandColumn);\n      return cloneColumns.map(function (col) {\n        return col === EXPAND_COLUMN ? expandColumn : col;\n      });\n    }\n    if (process.env.NODE_ENV !== 'production' && baseColumns.includes(EXPAND_COLUMN)) {\n      warning(false, '`expandable` is not config but there exist `EXPAND_COLUMN` in `columns`.');\n    }\n    return baseColumns.filter(function (col) {\n      return col !== EXPAND_COLUMN;\n    });\n  }, [expandable, baseColumns, getRowKey, expandedKeys, expandIcon, direction]);\n\n  // ========================= Transform ========================\n  var mergedColumns = React.useMemo(function () {\n    var finalColumns = withExpandColumns;\n    if (transformColumns) {\n      finalColumns = transformColumns(finalColumns);\n    }\n\n    // Always provides at least one column for table display\n    if (!finalColumns.length) {\n      finalColumns = [{\n        render: function render() {\n          return null;\n        }\n      }];\n    }\n    return finalColumns;\n  }, [transformColumns, withExpandColumns, direction]);\n\n  // ========================== Flatten =========================\n  var flattenColumns = React.useMemo(function () {\n    if (direction === 'rtl') {\n      return revertForRtl(flatColumns(mergedColumns));\n    }\n    return flatColumns(mergedColumns);\n  }, [mergedColumns, direction, scrollWidth]);\n\n  // Only check out of production since it's waste for each render\n  if (process.env.NODE_ENV !== 'production') {\n    warningFixed(direction === 'rtl' ? flattenColumns.slice().reverse() : flattenColumns);\n  }\n\n  // ========================= FillWidth ========================\n  var _useWidthColumns = useWidthColumns(flattenColumns, scrollWidth, clientWidth),\n    _useWidthColumns2 = _slicedToArray(_useWidthColumns, 2),\n    filledColumns = _useWidthColumns2[0],\n    realScrollWidth = _useWidthColumns2[1];\n  return [mergedColumns, filledColumns, realScrollWidth];\n}\nexport default useColumns;"],"mappings":"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"},"metadata":{},"sourceType":"module"}