{"ast":null,"code":"\"use client\";\n\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport React, { createRef, forwardRef, useContext } from 'react';\nimport classNames from 'classnames';\nimport ResizeObserver from 'rc-resize-observer';\nimport omit from \"rc-util/es/omit\";\nimport throttleByAnimationFrame from '../_util/throttleByAnimationFrame';\nimport { ConfigContext } from '../config-provider';\nimport useStyle from './style';\nimport { getFixedBottom, getFixedTop, getTargetRect } from './utils';\nconst TRIGGER_EVENTS = ['resize', 'scroll', 'touchstart', 'touchmove', 'touchend', 'pageshow', 'load'];\n\nfunction getDefaultTarget() {\n  return typeof window !== 'undefined' ? window : null;\n}\n\nvar AffixStatus;\n\n(function (AffixStatus) {\n  AffixStatus[AffixStatus[\"None\"] = 0] = \"None\";\n  AffixStatus[AffixStatus[\"Prepare\"] = 1] = \"Prepare\";\n})(AffixStatus || (AffixStatus = {}));\n\nlet InternalAffix = /*#__PURE__*/function (_React$Component) {\n  _inherits(InternalAffix, _React$Component);\n\n  var _super = _createSuper(InternalAffix);\n\n  function InternalAffix() {\n    var _this;\n\n    _classCallCheck(this, InternalAffix);\n\n    _this = _super.apply(this, arguments);\n    _this.state = {\n      status: AffixStatus.None,\n      lastAffix: false,\n      prevTarget: null\n    };\n    _this.placeholderNodeRef = /*#__PURE__*/createRef();\n    _this.fixedNodeRef = /*#__PURE__*/createRef();\n\n    _this.addListeners = () => {\n      const targetFunc = _this.getTargetFunc();\n\n      const target = targetFunc === null || targetFunc === void 0 ? void 0 : targetFunc();\n      const {\n        prevTarget\n      } = _this.state;\n\n      if (prevTarget !== target) {\n        TRIGGER_EVENTS.forEach(eventName => {\n          prevTarget === null || prevTarget === void 0 ? void 0 : prevTarget.removeEventListener(eventName, _this.lazyUpdatePosition);\n          target === null || target === void 0 ? void 0 : target.addEventListener(eventName, _this.lazyUpdatePosition);\n        });\n\n        _this.updatePosition();\n\n        _this.setState({\n          prevTarget: target\n        });\n      }\n    };\n\n    _this.removeListeners = () => {\n      if (_this.timer) {\n        clearTimeout(_this.timer);\n        _this.timer = null;\n      }\n\n      const {\n        prevTarget\n      } = _this.state;\n\n      const targetFunc = _this.getTargetFunc();\n\n      const newTarget = targetFunc === null || targetFunc === void 0 ? void 0 : targetFunc();\n      TRIGGER_EVENTS.forEach(eventName => {\n        newTarget === null || newTarget === void 0 ? void 0 : newTarget.removeEventListener(eventName, _this.lazyUpdatePosition);\n        prevTarget === null || prevTarget === void 0 ? void 0 : prevTarget.removeEventListener(eventName, _this.lazyUpdatePosition);\n      });\n\n      _this.updatePosition.cancel(); // https://github.com/ant-design/ant-design/issues/22683\n\n\n      _this.lazyUpdatePosition.cancel();\n    };\n\n    _this.getOffsetTop = () => {\n      const {\n        offsetBottom,\n        offsetTop\n      } = _this.props;\n      return offsetBottom === undefined && offsetTop === undefined ? 0 : offsetTop;\n    };\n\n    _this.getOffsetBottom = () => _this.props.offsetBottom; // =================== Measure ===================\n\n\n    _this.measure = () => {\n      const {\n        status,\n        lastAffix\n      } = _this.state;\n      const {\n        onChange\n      } = _this.props;\n\n      const targetFunc = _this.getTargetFunc();\n\n      if (status !== AffixStatus.Prepare || !_this.fixedNodeRef.current || !_this.placeholderNodeRef.current || !targetFunc) {\n        return;\n      }\n\n      const offsetTop = _this.getOffsetTop();\n\n      const offsetBottom = _this.getOffsetBottom();\n\n      const targetNode = targetFunc();\n\n      if (targetNode) {\n        const newState = {\n          status: AffixStatus.None\n        };\n        const placeholderRect = getTargetRect(_this.placeholderNodeRef.current);\n\n        if (placeholderRect.top === 0 && placeholderRect.left === 0 && placeholderRect.width === 0 && placeholderRect.height === 0) {\n          return;\n        }\n\n        const targetRect = getTargetRect(targetNode);\n        const fixedTop = getFixedTop(placeholderRect, targetRect, offsetTop);\n        const fixedBottom = getFixedBottom(placeholderRect, targetRect, offsetBottom);\n\n        if (fixedTop !== undefined) {\n          newState.affixStyle = {\n            position: 'fixed',\n            top: fixedTop,\n            width: placeholderRect.width,\n            height: placeholderRect.height\n          };\n          newState.placeholderStyle = {\n            width: placeholderRect.width,\n            height: placeholderRect.height\n          };\n        } else if (fixedBottom !== undefined) {\n          newState.affixStyle = {\n            position: 'fixed',\n            bottom: fixedBottom,\n            width: placeholderRect.width,\n            height: placeholderRect.height\n          };\n          newState.placeholderStyle = {\n            width: placeholderRect.width,\n            height: placeholderRect.height\n          };\n        }\n\n        newState.lastAffix = !!newState.affixStyle;\n\n        if (onChange && lastAffix !== newState.lastAffix) {\n          onChange(newState.lastAffix);\n        }\n\n        _this.setState(newState);\n      }\n    };\n\n    _this.prepareMeasure = () => {\n      // event param is used before. Keep compatible ts define here.\n      _this.setState({\n        status: AffixStatus.Prepare,\n        affixStyle: undefined,\n        placeholderStyle: undefined\n      }); // Test if `updatePosition` called\n\n\n      if (process.env.NODE_ENV === 'test') {\n        const {\n          onTestUpdatePosition\n        } = _this.props;\n        onTestUpdatePosition === null || onTestUpdatePosition === void 0 ? void 0 : onTestUpdatePosition();\n      }\n    };\n\n    _this.updatePosition = throttleByAnimationFrame(() => {\n      _this.prepareMeasure();\n    });\n    _this.lazyUpdatePosition = throttleByAnimationFrame(() => {\n      const targetFunc = _this.getTargetFunc();\n\n      const {\n        affixStyle\n      } = _this.state; // Check position change before measure to make Safari smooth\n\n      if (targetFunc && affixStyle) {\n        const offsetTop = _this.getOffsetTop();\n\n        const offsetBottom = _this.getOffsetBottom();\n\n        const targetNode = targetFunc();\n\n        if (targetNode && _this.placeholderNodeRef.current) {\n          const targetRect = getTargetRect(targetNode);\n          const placeholderRect = getTargetRect(_this.placeholderNodeRef.current);\n          const fixedTop = getFixedTop(placeholderRect, targetRect, offsetTop);\n          const fixedBottom = getFixedBottom(placeholderRect, targetRect, offsetBottom);\n\n          if (fixedTop !== undefined && affixStyle.top === fixedTop || fixedBottom !== undefined && affixStyle.bottom === fixedBottom) {\n            return;\n          }\n        }\n      } // Directly call prepare measure since it's already throttled.\n\n\n      _this.prepareMeasure();\n    });\n    return _this;\n  }\n\n  _createClass(InternalAffix, [{\n    key: \"getTargetFunc\",\n    value: function getTargetFunc() {\n      const {\n        getTargetContainer\n      } = this.context;\n      const {\n        target\n      } = this.props;\n\n      if (target !== undefined) {\n        return target;\n      }\n\n      return getTargetContainer !== null && getTargetContainer !== void 0 ? getTargetContainer : getDefaultTarget;\n    } // Event handler\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // [Legacy] Wait for parent component ref has its value.\n      // We should use target as directly element instead of function which makes element check hard.\n      this.timer = setTimeout(this.addListeners);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      this.addListeners();\n\n      if (prevProps.offsetTop !== this.props.offsetTop || prevProps.offsetBottom !== this.props.offsetBottom) {\n        this.updatePosition();\n      }\n\n      this.measure();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.removeListeners();\n    } // =================== Render ===================\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      const {\n        affixStyle,\n        placeholderStyle\n      } = this.state;\n      const {\n        affixPrefixCls,\n        rootClassName,\n        children\n      } = this.props;\n      const className = classNames(affixStyle && rootClassName, {\n        [affixPrefixCls]: !!affixStyle\n      });\n      let props = omit(this.props, ['prefixCls', 'offsetTop', 'offsetBottom', 'target', 'onChange', 'affixPrefixCls', 'rootClassName']); // Omit this since `onTestUpdatePosition` only works on test.\n\n      if (process.env.NODE_ENV === 'test') {\n        props = omit(props, ['onTestUpdatePosition']);\n      }\n\n      return /*#__PURE__*/React.createElement(ResizeObserver, {\n        onResize: this.updatePosition\n      }, /*#__PURE__*/React.createElement(\"div\", Object.assign({}, props, {\n        ref: this.placeholderNodeRef\n      }), affixStyle && /*#__PURE__*/React.createElement(\"div\", {\n        style: placeholderStyle,\n        \"aria-hidden\": \"true\"\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: className,\n        ref: this.fixedNodeRef,\n        style: affixStyle\n      }, /*#__PURE__*/React.createElement(ResizeObserver, {\n        onResize: this.updatePosition\n      }, children))));\n    }\n  }]);\n\n  return InternalAffix;\n}(React.Component);\n\nInternalAffix.contextType = ConfigContext;\nconst Affix = /*#__PURE__*/forwardRef((props, ref) => {\n  const {\n    prefixCls: customizePrefixCls,\n    rootClassName\n  } = props;\n  const {\n    getPrefixCls\n  } = useContext(ConfigContext);\n  const affixPrefixCls = getPrefixCls('affix', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(affixPrefixCls);\n  const AffixProps = Object.assign(Object.assign({}, props), {\n    affixPrefixCls,\n    rootClassName: classNames(rootClassName, hashId)\n  });\n  return wrapSSR( /*#__PURE__*/React.createElement(InternalAffix, Object.assign({}, AffixProps, {\n    ref: ref\n  })));\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Affix.displayName = 'Affix';\n}\n\nexport default Affix;","map":{"version":3,"names":["_classCallCheck","_createClass","_inherits","_createSuper","React","createRef","forwardRef","useContext","classNames","ResizeObserver","omit","throttleByAnimationFrame","ConfigContext","useStyle","getFixedBottom","getFixedTop","getTargetRect","TRIGGER_EVENTS","getDefaultTarget","window","AffixStatus","InternalAffix","_React$Component","_super","_this","apply","arguments","state","status","None","lastAffix","prevTarget","placeholderNodeRef","fixedNodeRef","addListeners","targetFunc","getTargetFunc","target","forEach","eventName","removeEventListener","lazyUpdatePosition","addEventListener","updatePosition","setState","removeListeners","timer","clearTimeout","newTarget","cancel","getOffsetTop","offsetBottom","offsetTop","props","undefined","getOffsetBottom","measure","onChange","Prepare","current","targetNode","newState","placeholderRect","top","left","width","height","targetRect","fixedTop","fixedBottom","affixStyle","position","placeholderStyle","bottom","prepareMeasure","process","env","NODE_ENV","onTestUpdatePosition","key","value","getTargetContainer","context","componentDidMount","setTimeout","componentDidUpdate","prevProps","componentWillUnmount","render","affixPrefixCls","rootClassName","children","className","createElement","onResize","Object","assign","ref","style","Component","contextType","Affix","prefixCls","customizePrefixCls","getPrefixCls","wrapSSR","hashId","AffixProps","displayName"],"sources":["/mnt/c/Users/Admin/crud-app/node_modules/antd/es/affix/index.js"],"sourcesContent":["\"use client\";\n\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport React, { createRef, forwardRef, useContext } from 'react';\nimport classNames from 'classnames';\nimport ResizeObserver from 'rc-resize-observer';\nimport omit from \"rc-util/es/omit\";\nimport throttleByAnimationFrame from '../_util/throttleByAnimationFrame';\nimport { ConfigContext } from '../config-provider';\nimport useStyle from './style';\nimport { getFixedBottom, getFixedTop, getTargetRect } from './utils';\nconst TRIGGER_EVENTS = ['resize', 'scroll', 'touchstart', 'touchmove', 'touchend', 'pageshow', 'load'];\nfunction getDefaultTarget() {\n  return typeof window !== 'undefined' ? window : null;\n}\nvar AffixStatus;\n(function (AffixStatus) {\n  AffixStatus[AffixStatus[\"None\"] = 0] = \"None\";\n  AffixStatus[AffixStatus[\"Prepare\"] = 1] = \"Prepare\";\n})(AffixStatus || (AffixStatus = {}));\nlet InternalAffix = /*#__PURE__*/function (_React$Component) {\n  _inherits(InternalAffix, _React$Component);\n  var _super = _createSuper(InternalAffix);\n  function InternalAffix() {\n    var _this;\n    _classCallCheck(this, InternalAffix);\n    _this = _super.apply(this, arguments);\n    _this.state = {\n      status: AffixStatus.None,\n      lastAffix: false,\n      prevTarget: null\n    };\n    _this.placeholderNodeRef = /*#__PURE__*/createRef();\n    _this.fixedNodeRef = /*#__PURE__*/createRef();\n    _this.addListeners = () => {\n      const targetFunc = _this.getTargetFunc();\n      const target = targetFunc === null || targetFunc === void 0 ? void 0 : targetFunc();\n      const {\n        prevTarget\n      } = _this.state;\n      if (prevTarget !== target) {\n        TRIGGER_EVENTS.forEach(eventName => {\n          prevTarget === null || prevTarget === void 0 ? void 0 : prevTarget.removeEventListener(eventName, _this.lazyUpdatePosition);\n          target === null || target === void 0 ? void 0 : target.addEventListener(eventName, _this.lazyUpdatePosition);\n        });\n        _this.updatePosition();\n        _this.setState({\n          prevTarget: target\n        });\n      }\n    };\n    _this.removeListeners = () => {\n      if (_this.timer) {\n        clearTimeout(_this.timer);\n        _this.timer = null;\n      }\n      const {\n        prevTarget\n      } = _this.state;\n      const targetFunc = _this.getTargetFunc();\n      const newTarget = targetFunc === null || targetFunc === void 0 ? void 0 : targetFunc();\n      TRIGGER_EVENTS.forEach(eventName => {\n        newTarget === null || newTarget === void 0 ? void 0 : newTarget.removeEventListener(eventName, _this.lazyUpdatePosition);\n        prevTarget === null || prevTarget === void 0 ? void 0 : prevTarget.removeEventListener(eventName, _this.lazyUpdatePosition);\n      });\n      _this.updatePosition.cancel();\n      // https://github.com/ant-design/ant-design/issues/22683\n      _this.lazyUpdatePosition.cancel();\n    };\n    _this.getOffsetTop = () => {\n      const {\n        offsetBottom,\n        offsetTop\n      } = _this.props;\n      return offsetBottom === undefined && offsetTop === undefined ? 0 : offsetTop;\n    };\n    _this.getOffsetBottom = () => _this.props.offsetBottom;\n    // =================== Measure ===================\n    _this.measure = () => {\n      const {\n        status,\n        lastAffix\n      } = _this.state;\n      const {\n        onChange\n      } = _this.props;\n      const targetFunc = _this.getTargetFunc();\n      if (status !== AffixStatus.Prepare || !_this.fixedNodeRef.current || !_this.placeholderNodeRef.current || !targetFunc) {\n        return;\n      }\n      const offsetTop = _this.getOffsetTop();\n      const offsetBottom = _this.getOffsetBottom();\n      const targetNode = targetFunc();\n      if (targetNode) {\n        const newState = {\n          status: AffixStatus.None\n        };\n        const placeholderRect = getTargetRect(_this.placeholderNodeRef.current);\n        if (placeholderRect.top === 0 && placeholderRect.left === 0 && placeholderRect.width === 0 && placeholderRect.height === 0) {\n          return;\n        }\n        const targetRect = getTargetRect(targetNode);\n        const fixedTop = getFixedTop(placeholderRect, targetRect, offsetTop);\n        const fixedBottom = getFixedBottom(placeholderRect, targetRect, offsetBottom);\n        if (fixedTop !== undefined) {\n          newState.affixStyle = {\n            position: 'fixed',\n            top: fixedTop,\n            width: placeholderRect.width,\n            height: placeholderRect.height\n          };\n          newState.placeholderStyle = {\n            width: placeholderRect.width,\n            height: placeholderRect.height\n          };\n        } else if (fixedBottom !== undefined) {\n          newState.affixStyle = {\n            position: 'fixed',\n            bottom: fixedBottom,\n            width: placeholderRect.width,\n            height: placeholderRect.height\n          };\n          newState.placeholderStyle = {\n            width: placeholderRect.width,\n            height: placeholderRect.height\n          };\n        }\n        newState.lastAffix = !!newState.affixStyle;\n        if (onChange && lastAffix !== newState.lastAffix) {\n          onChange(newState.lastAffix);\n        }\n        _this.setState(newState);\n      }\n    };\n    _this.prepareMeasure = () => {\n      // event param is used before. Keep compatible ts define here.\n      _this.setState({\n        status: AffixStatus.Prepare,\n        affixStyle: undefined,\n        placeholderStyle: undefined\n      });\n      // Test if `updatePosition` called\n      if (process.env.NODE_ENV === 'test') {\n        const {\n          onTestUpdatePosition\n        } = _this.props;\n        onTestUpdatePosition === null || onTestUpdatePosition === void 0 ? void 0 : onTestUpdatePosition();\n      }\n    };\n    _this.updatePosition = throttleByAnimationFrame(() => {\n      _this.prepareMeasure();\n    });\n    _this.lazyUpdatePosition = throttleByAnimationFrame(() => {\n      const targetFunc = _this.getTargetFunc();\n      const {\n        affixStyle\n      } = _this.state;\n      // Check position change before measure to make Safari smooth\n      if (targetFunc && affixStyle) {\n        const offsetTop = _this.getOffsetTop();\n        const offsetBottom = _this.getOffsetBottom();\n        const targetNode = targetFunc();\n        if (targetNode && _this.placeholderNodeRef.current) {\n          const targetRect = getTargetRect(targetNode);\n          const placeholderRect = getTargetRect(_this.placeholderNodeRef.current);\n          const fixedTop = getFixedTop(placeholderRect, targetRect, offsetTop);\n          const fixedBottom = getFixedBottom(placeholderRect, targetRect, offsetBottom);\n          if (fixedTop !== undefined && affixStyle.top === fixedTop || fixedBottom !== undefined && affixStyle.bottom === fixedBottom) {\n            return;\n          }\n        }\n      }\n      // Directly call prepare measure since it's already throttled.\n      _this.prepareMeasure();\n    });\n    return _this;\n  }\n  _createClass(InternalAffix, [{\n    key: \"getTargetFunc\",\n    value: function getTargetFunc() {\n      const {\n        getTargetContainer\n      } = this.context;\n      const {\n        target\n      } = this.props;\n      if (target !== undefined) {\n        return target;\n      }\n      return getTargetContainer !== null && getTargetContainer !== void 0 ? getTargetContainer : getDefaultTarget;\n    }\n    // Event handler\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // [Legacy] Wait for parent component ref has its value.\n      // We should use target as directly element instead of function which makes element check hard.\n      this.timer = setTimeout(this.addListeners);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      this.addListeners();\n      if (prevProps.offsetTop !== this.props.offsetTop || prevProps.offsetBottom !== this.props.offsetBottom) {\n        this.updatePosition();\n      }\n      this.measure();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.removeListeners();\n    }\n    // =================== Render ===================\n  }, {\n    key: \"render\",\n    value: function render() {\n      const {\n        affixStyle,\n        placeholderStyle\n      } = this.state;\n      const {\n        affixPrefixCls,\n        rootClassName,\n        children\n      } = this.props;\n      const className = classNames(affixStyle && rootClassName, {\n        [affixPrefixCls]: !!affixStyle\n      });\n      let props = omit(this.props, ['prefixCls', 'offsetTop', 'offsetBottom', 'target', 'onChange', 'affixPrefixCls', 'rootClassName']);\n      // Omit this since `onTestUpdatePosition` only works on test.\n      if (process.env.NODE_ENV === 'test') {\n        props = omit(props, ['onTestUpdatePosition']);\n      }\n      return /*#__PURE__*/React.createElement(ResizeObserver, {\n        onResize: this.updatePosition\n      }, /*#__PURE__*/React.createElement(\"div\", Object.assign({}, props, {\n        ref: this.placeholderNodeRef\n      }), affixStyle && /*#__PURE__*/React.createElement(\"div\", {\n        style: placeholderStyle,\n        \"aria-hidden\": \"true\"\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: className,\n        ref: this.fixedNodeRef,\n        style: affixStyle\n      }, /*#__PURE__*/React.createElement(ResizeObserver, {\n        onResize: this.updatePosition\n      }, children))));\n    }\n  }]);\n  return InternalAffix;\n}(React.Component);\nInternalAffix.contextType = ConfigContext;\nconst Affix = /*#__PURE__*/forwardRef((props, ref) => {\n  const {\n    prefixCls: customizePrefixCls,\n    rootClassName\n  } = props;\n  const {\n    getPrefixCls\n  } = useContext(ConfigContext);\n  const affixPrefixCls = getPrefixCls('affix', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(affixPrefixCls);\n  const AffixProps = Object.assign(Object.assign({}, props), {\n    affixPrefixCls,\n    rootClassName: classNames(rootClassName, hashId)\n  });\n  return wrapSSR( /*#__PURE__*/React.createElement(InternalAffix, Object.assign({}, AffixProps, {\n    ref: ref\n  })));\n});\nif (process.env.NODE_ENV !== 'production') {\n  Affix.displayName = 'Affix';\n}\nexport default Affix;"],"mappings":"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"},"metadata":{},"sourceType":"module"}