{"ast":null,"code":"import { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport genSpaceCompactStyle from './compact';\n\nconst genSpaceStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [componentCls]: {\n      display: 'inline-flex',\n      '&-rtl': {\n        direction: 'rtl'\n      },\n      '&-vertical': {\n        flexDirection: 'column'\n      },\n      '&-align': {\n        flexDirection: 'column',\n        '&-center': {\n          alignItems: 'center'\n        },\n        '&-start': {\n          alignItems: 'flex-start'\n        },\n        '&-end': {\n          alignItems: 'flex-end'\n        },\n        '&-baseline': {\n          alignItems: 'baseline'\n        }\n      },\n      [`${componentCls}-item:empty`]: {\n        display: 'none'\n      }\n    }\n  };\n};\n\nconst genSpaceGapStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [componentCls]: {\n      '&-gap-row-small': {\n        rowGap: token.spaceGapSmallSize\n      },\n      '&-gap-row-middle': {\n        rowGap: token.spaceGapMiddleSize\n      },\n      '&-gap-row-large': {\n        rowGap: token.spaceGapLargeSize\n      },\n      '&-gap-col-small': {\n        columnGap: token.spaceGapSmallSize\n      },\n      '&-gap-col-middle': {\n        columnGap: token.spaceGapMiddleSize\n      },\n      '&-gap-col-large': {\n        columnGap: token.spaceGapLargeSize\n      }\n    }\n  };\n}; // ============================== Export ==============================\n\n\nexport default genComponentStyleHook('Space', token => {\n  const spaceToken = mergeToken(token, {\n    spaceGapSmallSize: token.paddingXS,\n    spaceGapMiddleSize: token.padding,\n    spaceGapLargeSize: token.paddingLG\n  });\n  return [genSpaceStyle(spaceToken), genSpaceGapStyle(spaceToken), genSpaceCompactStyle(spaceToken)];\n}, () => ({}), {\n  // Space component don't apply extra font style\n  // https://github.com/ant-design/ant-design/issues/40315\n  resetStyle: false\n});","map":{"version":3,"names":["genComponentStyleHook","mergeToken","genSpaceCompactStyle","genSpaceStyle","token","componentCls","display","direction","flexDirection","alignItems","genSpaceGapStyle","rowGap","spaceGapSmallSize","spaceGapMiddleSize","spaceGapLargeSize","columnGap","spaceToken","paddingXS","padding","paddingLG","resetStyle"],"sources":["/mnt/c/Users/Admin/crud-app/node_modules/antd/es/space/style/index.js"],"sourcesContent":["import { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport genSpaceCompactStyle from './compact';\nconst genSpaceStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [componentCls]: {\n      display: 'inline-flex',\n      '&-rtl': {\n        direction: 'rtl'\n      },\n      '&-vertical': {\n        flexDirection: 'column'\n      },\n      '&-align': {\n        flexDirection: 'column',\n        '&-center': {\n          alignItems: 'center'\n        },\n        '&-start': {\n          alignItems: 'flex-start'\n        },\n        '&-end': {\n          alignItems: 'flex-end'\n        },\n        '&-baseline': {\n          alignItems: 'baseline'\n        }\n      },\n      [`${componentCls}-item:empty`]: {\n        display: 'none'\n      }\n    }\n  };\n};\nconst genSpaceGapStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [componentCls]: {\n      '&-gap-row-small': {\n        rowGap: token.spaceGapSmallSize\n      },\n      '&-gap-row-middle': {\n        rowGap: token.spaceGapMiddleSize\n      },\n      '&-gap-row-large': {\n        rowGap: token.spaceGapLargeSize\n      },\n      '&-gap-col-small': {\n        columnGap: token.spaceGapSmallSize\n      },\n      '&-gap-col-middle': {\n        columnGap: token.spaceGapMiddleSize\n      },\n      '&-gap-col-large': {\n        columnGap: token.spaceGapLargeSize\n      }\n    }\n  };\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Space', token => {\n  const spaceToken = mergeToken(token, {\n    spaceGapSmallSize: token.paddingXS,\n    spaceGapMiddleSize: token.padding,\n    spaceGapLargeSize: token.paddingLG\n  });\n  return [genSpaceStyle(spaceToken), genSpaceGapStyle(spaceToken), genSpaceCompactStyle(spaceToken)];\n}, () => ({}), {\n  // Space component don't apply extra font style\n  // https://github.com/ant-design/ant-design/issues/40315\n  resetStyle: false\n});"],"mappings":"AAAA,SAASA,qBAAT,EAAgCC,UAAhC,QAAkD,sBAAlD;AACA,OAAOC,oBAAP,MAAiC,WAAjC;;AACA,MAAMC,aAAa,GAAGC,KAAK,IAAI;EAC7B,MAAM;IACJC;EADI,IAEFD,KAFJ;EAGA,OAAO;IACL,CAACC,YAAD,GAAgB;MACdC,OAAO,EAAE,aADK;MAEd,SAAS;QACPC,SAAS,EAAE;MADJ,CAFK;MAKd,cAAc;QACZC,aAAa,EAAE;MADH,CALA;MAQd,WAAW;QACTA,aAAa,EAAE,QADN;QAET,YAAY;UACVC,UAAU,EAAE;QADF,CAFH;QAKT,WAAW;UACTA,UAAU,EAAE;QADH,CALF;QAQT,SAAS;UACPA,UAAU,EAAE;QADL,CARA;QAWT,cAAc;UACZA,UAAU,EAAE;QADA;MAXL,CARG;MAuBd,CAAE,GAAEJ,YAAa,aAAjB,GAAgC;QAC9BC,OAAO,EAAE;MADqB;IAvBlB;EADX,CAAP;AA6BD,CAjCD;;AAkCA,MAAMI,gBAAgB,GAAGN,KAAK,IAAI;EAChC,MAAM;IACJC;EADI,IAEFD,KAFJ;EAGA,OAAO;IACL,CAACC,YAAD,GAAgB;MACd,mBAAmB;QACjBM,MAAM,EAAEP,KAAK,CAACQ;MADG,CADL;MAId,oBAAoB;QAClBD,MAAM,EAAEP,KAAK,CAACS;MADI,CAJN;MAOd,mBAAmB;QACjBF,MAAM,EAAEP,KAAK,CAACU;MADG,CAPL;MAUd,mBAAmB;QACjBC,SAAS,EAAEX,KAAK,CAACQ;MADA,CAVL;MAad,oBAAoB;QAClBG,SAAS,EAAEX,KAAK,CAACS;MADC,CAbN;MAgBd,mBAAmB;QACjBE,SAAS,EAAEX,KAAK,CAACU;MADA;IAhBL;EADX,CAAP;AAsBD,CA1BD,C,CA2BA;;;AACA,eAAed,qBAAqB,CAAC,OAAD,EAAUI,KAAK,IAAI;EACrD,MAAMY,UAAU,GAAGf,UAAU,CAACG,KAAD,EAAQ;IACnCQ,iBAAiB,EAAER,KAAK,CAACa,SADU;IAEnCJ,kBAAkB,EAAET,KAAK,CAACc,OAFS;IAGnCJ,iBAAiB,EAAEV,KAAK,CAACe;EAHU,CAAR,CAA7B;EAKA,OAAO,CAAChB,aAAa,CAACa,UAAD,CAAd,EAA4BN,gBAAgB,CAACM,UAAD,CAA5C,EAA0Dd,oBAAoB,CAACc,UAAD,CAA9E,CAAP;AACD,CAPmC,EAOjC,OAAO,EAAP,CAPiC,EAOrB;EACb;EACA;EACAI,UAAU,EAAE;AAHC,CAPqB,CAApC"},"metadata":{},"sourceType":"module"}